[{"C:\\laragon\\www\\sales-automation\\sales\\src\\index.js":"1","C:\\laragon\\www\\sales-automation\\sales\\src\\App.js":"2","C:\\laragon\\www\\sales-automation\\sales\\src\\reportWebVitals.js":"3","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\Speech.jsx":"4","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\GroupDetails.jsx":"5","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\Dashboard.jsx":"6","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\ConcurrentCalls.jsx":"7","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Chat.jsx":"8","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Chart.jsx":"9","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Sidebar.jsx":"10","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\AudioPlayer.jsx":"11","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Main.jsx":"12","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\ConcurrentForm.jsx":"13","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Card.jsx":"14","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Heading.jsx":"15","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Button.jsx":"16","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Navbar.jsx":"17","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Block.jsx":"18","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Tabs.jsx":"19","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\GroupBlock.jsx":"20","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Table.jsx":"21","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\TableDetails.jsx":"22","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Modal.jsx":"23","C:\\laragon\\www\\sales-automation\\sales\\src\\socket-client.js":"24","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\Setting.js":"25","C:\\laragon\\www\\doctor-manager\\sales\\src\\index.js":"26","C:\\laragon\\www\\doctor-manager\\sales\\src\\App.js":"27","C:\\laragon\\www\\doctor-manager\\sales\\src\\reportWebVitals.js":"28","C:\\laragon\\www\\doctor-manager\\sales\\src\\socket-client.js":"29","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\Setting.js":"30","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\Dashboard.jsx":"31","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\ConcurrentCalls.jsx":"32","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\Speech.jsx":"33","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\GroupDetails.jsx":"34","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Chat.jsx":"35","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Sidebar.jsx":"36","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Navbar.jsx":"37","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Button.jsx":"38","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Main.jsx":"39","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\AudioPlayer.jsx":"40","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\ConcurrentForm.jsx":"41","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Chart.jsx":"42","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Heading.jsx":"43","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Tabs.jsx":"44","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Table.jsx":"45","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\GroupBlock.jsx":"46","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Block.jsx":"47","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\TableDetails.jsx":"48","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Card.jsx":"49","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Modal.jsx":"50","C:\\laragon\\www\\doctor-manager\\sales\\src\\api\\api.js":"51","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\AddDoctorModal.jsx":"52","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\AddDoctor.jsx":"53","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\DeleteModal.jsx":"54"},{"size":552,"mtime":1693820010135,"results":"55","hashOfConfig":"56"},{"size":1001,"mtime":1694156514439,"results":"57","hashOfConfig":"56"},{"size":375,"mtime":1693820010136,"results":"58","hashOfConfig":"56"},{"size":312,"mtime":1693820010126,"results":"59","hashOfConfig":"56"},{"size":327,"mtime":1695121749735,"results":"60","hashOfConfig":"56"},{"size":364,"mtime":1693820010125,"results":"61","hashOfConfig":"56"},{"size":388,"mtime":1693820010125,"results":"62","hashOfConfig":"56"},{"size":10585,"mtime":1693820010130,"results":"63","hashOfConfig":"56"},{"size":3607,"mtime":1695121749750,"results":"64","hashOfConfig":"56"},{"size":2754,"mtime":1694156514439,"results":"65","hashOfConfig":"56"},{"size":439,"mtime":1693820010127,"results":"66","hashOfConfig":"56"},{"size":2155,"mtime":1695121749750,"results":"67","hashOfConfig":"56"},{"size":7274,"mtime":1695209271755,"results":"68","hashOfConfig":"56"},{"size":7833,"mtime":1695121749750,"results":"69","hashOfConfig":"56"},{"size":166,"mtime":1693820010132,"results":"70","hashOfConfig":"56"},{"size":522,"mtime":1694156514439,"results":"71","hashOfConfig":"56"},{"size":6886,"mtime":1694156514439,"results":"72","hashOfConfig":"56"},{"size":1343,"mtime":1695121749735,"results":"73","hashOfConfig":"56"},{"size":201,"mtime":1693820010134,"results":"74","hashOfConfig":"56"},{"size":14166,"mtime":1695222731727,"results":"75","hashOfConfig":"56"},{"size":2984,"mtime":1695121749750,"results":"76","hashOfConfig":"56"},{"size":7445,"mtime":1695212481462,"results":"77","hashOfConfig":"56"},{"size":18313,"mtime":1695121749750,"results":"78","hashOfConfig":"56"},{"size":1865,"mtime":1694200198055,"results":"79","hashOfConfig":"56"},{"size":5793,"mtime":1695203906421,"results":"80","hashOfConfig":"56"},{"size":507,"mtime":1697224711111,"results":"81","hashOfConfig":"82"},{"size":1163,"mtime":1697307304735,"results":"83","hashOfConfig":"82"},{"size":375,"mtime":1693820010136,"results":"84","hashOfConfig":"82"},{"size":1865,"mtime":1694200198055,"results":"85","hashOfConfig":"82"},{"size":5519,"mtime":1697235029557,"results":"86","hashOfConfig":"82"},{"size":441,"mtime":1697378058481,"results":"87","hashOfConfig":"82"},{"size":388,"mtime":1697234865026,"results":"88","hashOfConfig":"82"},{"size":312,"mtime":1693820010126,"results":"89","hashOfConfig":"82"},{"size":327,"mtime":1695808724907,"results":"90","hashOfConfig":"82"},{"size":10601,"mtime":1695807212272,"results":"91","hashOfConfig":"82"},{"size":2779,"mtime":1697234819323,"results":"92","hashOfConfig":"82"},{"size":6886,"mtime":1695807368485,"results":"93","hashOfConfig":"82"},{"size":564,"mtime":1697233851893,"results":"94","hashOfConfig":"82"},{"size":2502,"mtime":1696029510811,"results":"95","hashOfConfig":"82"},{"size":439,"mtime":1693820010127,"results":"96","hashOfConfig":"82"},{"size":5638,"mtime":1697235135549,"results":"97","hashOfConfig":"82"},{"size":3607,"mtime":1695121749750,"results":"98","hashOfConfig":"82"},{"size":166,"mtime":1693820010132,"results":"99","hashOfConfig":"82"},{"size":201,"mtime":1693820010134,"results":"100","hashOfConfig":"82"},{"size":5017,"mtime":1697378987104,"results":"101","hashOfConfig":"82"},{"size":4672,"mtime":1697227168110,"results":"102","hashOfConfig":"82"},{"size":764,"mtime":1697235578696,"results":"103","hashOfConfig":"82"},{"size":6602,"mtime":1697379734910,"results":"104","hashOfConfig":"82"},{"size":7845,"mtime":1695807220201,"results":"105","hashOfConfig":"82"},{"size":4708,"mtime":1697379584722,"results":"106","hashOfConfig":"82"},{"size":2754,"mtime":1696030287762,"results":"107","hashOfConfig":"82"},{"size":8838,"mtime":1696032073945,"results":"108","hashOfConfig":"82"},{"size":3703,"mtime":1695807349332,"results":"109","hashOfConfig":"82"},{"size":845,"mtime":1697233223140,"results":"110","hashOfConfig":"82"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"171r7a8",{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"1ak1emp",{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"202"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"202"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"202"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"202"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"202"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"202"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"202"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"202"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"202"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"202"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"202"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"202"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"202"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"C:\\laragon\\www\\sales-automation\\sales\\src\\index.js",[],[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\App.js",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\reportWebVitals.js",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\Speech.jsx",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\GroupDetails.jsx",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\Dashboard.jsx",["299"],[],"import React from 'react'\r\nimport Sidebar from './misc/Sidebar'\r\nimport Main from './misc/Main'\r\nimport AudioPlayer from './misc/AudioPlayer'\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div class=\"flex h-screen\">\r\n  \r\n      <div class=\"w-2/12 h-screen\"><Sidebar /></div>\r\n      <div class=\"w-10/12\"><Main /></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\ConcurrentCalls.jsx",["300"],[],"import React from 'react'\r\nimport Sidebar from './misc/Sidebar'\r\nimport Main from './misc/Main'\r\nimport ConcurrentForm from './misc/ConcurrentForm'\r\n\r\nconst ConcurrentCalls = () => {\r\n  return (\r\n    <div class=\"flex h-screen\">\r\n      <div class=\"w-2/12 h-screen\"><Sidebar /></div>\r\n      <div class=\"w-10/12\"><ConcurrentForm /></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConcurrentCalls","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Chat.jsx",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Chart.jsx",["301"],[],"import React, { useEffect, useState } from 'react'\r\nimport Card from './Card'\r\nimport Navbar from './Navbar'\r\nimport axios from \"axios\";\r\nconst apiURL = process.env.REACT_APP_BASE_URL_LIVE;\r\n\r\nconst Chart = () => {\r\n  const [messgaes, setMessages] = useState()\r\n  useEffect(() => {\r\n    axios.get(`${apiURL}/api/messages`)\r\n      .then((res) => {\r\n        setMessages(res.data.messages)\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className='p-5 mainBg'>\r\n      <Navbar />\r\n      {\r\n        messgaes?.length > 1 && <>\r\n          <Card message={messgaes[0].primary} para={messgaes[0].secondary} index='0' id={messgaes[0]?._id} />\r\n          <div className=\"flex gap-2 mb-5 items-center ml-4\">\r\n            <p className='font-bold text-sm'>Response Time</p>\r\n            <p className='bg-indigo-500 py-1 px-3 rounded'>05 s </p>\r\n          </div>\r\n\r\n          <Card message={messgaes[1].primary} para={messgaes[1].secondary} index='1' id={messgaes[1]?._id} />\r\n          <div className='flex'>\r\n            <Card index='2' message={messgaes[2].primary} para={messgaes[2].secondary} id={messgaes[2]?._id} marginLeft='205px' background='rgb(88 154 176)' color='white' />\r\n            <Card index='3' disabled message={messgaes[3].primary} para={messgaes[3].secondary} id={messgaes[3]?._id} marginLeft='20px' background='rgb(88 154 176)' color='white' />\r\n            <Card index='4' message='Transferring the call' para='1612'  marginLeft='20px' background='rgb(88 154 176)' color='white' />\r\n          </div>\r\n          <div className='flex'>\r\n            <Card index='5' message={messgaes[4].primary} para={messgaes[4].secondary} id={messgaes[4]?._id} background='#0F2C35' marginLeft='205px' color='white' />\r\n            <Card index='6' message={messgaes[5].primary} para={messgaes[5].secondary} id={messgaes[5]?._id} background='#0F2C35' marginLeft='20px' color='white' />\r\n            {/* <Card index='7' message={messgaes[6].primary} para={messgaes[6].secondary} id={messgaes[6]?._id} background='#0F2C35' marginLeft='20px' color='white' /> */}\r\n          </div>\r\n          <p className='ml-48'>If Client says Cannot hear you!</p>\r\n          {/* <div className='flex'>\r\n            <Card index='8' message={messgaes[7].primary} para={messgaes[7].secondary} id={messgaes[7]?._id} background='#A8C5CE' marginLeft='205px' color='white' />\r\n            <Card index='9' message={messgaes[8].primary} para={messgaes[8].secondary} id={messgaes[8]?._id} background='#A8C5CE' marginLeft='20px' color='white' />\r\n          </div> */}\r\n          {/* <div className='flex'>\r\n            <Card index='10' message={messgaes[9].primary} para={messgaes[9].secondary} id={messgaes[9]?._id} marginLeft='205px' background='#649F91' color='white' />\r\n          </div> */}\r\n          <div className='flex'>\r\n            <Card index='6' background='rgb(88 154 176)'message={messgaes[6].primary} para={messgaes[6].secondary} id={messgaes[6]?._id} marginLeft='205px' background='#649F91' color='white' />\r\n          </div>\r\n          <div className='flex'>\r\n            <p className='ml-56'>Wait three seconds</p>\r\n          </div>\r\n          <div className='flex'>\r\n            <Card index='10' message='Yes' para='Move back to Sales Pitch' marginLeft='205px' background='#0F2C35' color='white' disabled />\r\n          </div>\r\n          <div className='flex'>\r\n            <Card index='10' message='No' para='Call Ends' marginLeft='205px' background='#A8C5CE' color='white' disabled />\r\n          </div>\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Sidebar.jsx",["302","303","304"],[],"import React from \"react\";\r\nimport Heading from \"./Heading\";\r\nimport Button from \"./Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  const navigate = useNavigate();\r\n  const icons = [\r\n    \"/imgs/logo.svg\",\r\n    \"/imgs/qq.png\",\r\n    \"/imgs/status.svg\",\r\n    \"/imgs/document.svg\",\r\n    \"/imgs/notification.svg\",\r\n    \"/imgs/setting-2.svg\",\r\n    \"/imgs/logout.svg\",\r\n    \"/imgs/setting.svg\",\r\n  ];\r\n  const currentPath = window.location.pathname;\r\n\r\n  // Extract the string after the last slash (/)\r\n  const pathSegments = currentPath.split(\"/\");\r\n  const lastSegment = pathSegments[pathSegments.length - 2];\r\n\r\n  var speech = false;\r\n  var group = false;\r\n  var setting = false;\r\n\r\n  console.log(window.location.origin);\r\n\r\n  if (pathSegments.includes(\"speech\")) {\r\n    speech = true;\r\n  }\r\n\r\n  if (\r\n    pathSegments.includes(\"group\") ||\r\n    pathSegments.includes(\"group-details\") ||\r\n    window.location.pathname == \"/\"\r\n  ) {\r\n    group = true;\r\n  }\r\n\r\n  if (pathSegments.includes(\"concurrent-calls\")) {\r\n    setting = true;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-5 flex flex-col justify-between h-screen\">\r\n      <div>\r\n        <div className=\"logo flex items-center gap-2\">\r\n          <img src={icons[0]} className=\"w-1/3\" />\r\n          <h1 className=\"sidebar__main__heading\">Sales</h1>\r\n        </div>\r\n        <Heading text={\"Main Menu\"} />\r\n        <div\r\n          onClick={() => {\r\n            navigate(\"/\");\r\n          }}\r\n        >\r\n          {group ? (\r\n            <Button text=\"Add Group\" icon={icons[1]} active my />\r\n          ) : (\r\n            <Button text=\"Add Group\" icon={icons[1]} my />\r\n          )}\r\n        </div>\r\n        {/* <div onClick={() => {\r\n          navigate('/group-details')\r\n        }}>\r\n          {\r\n            lastSegment == 'group-details' ? <Button text='Details' icon={icons[2]} active my /> : <Button text='Details' icon={icons[2]} my />\r\n          }\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            navigate(\"/speech\");\r\n          }}\r\n        >\r\n          {speech ? (\r\n            <Button text=\"Speech\" icon={icons[3]} my active />\r\n          ) : (\r\n            <Button text=\"Speech\" icon={icons[3]} my />\r\n          )}\r\n        </div>\r\n        {/* <Button text=\"Notification\" icon={icons[4]} my /> */}\r\n        <div\r\n          onClick={() => {\r\n            // navigate(\"/setting\");\r\n            navigate(\"/concurrent-calls\");\r\n          }}\r\n        >\r\n          {setting ? (\r\n            <Button text=\"Setting\" icon={icons[icons.length - 1]} my active />\r\n          ) : (\r\n            <Button text=\"Setting\" icon={icons[icons.length - 1]} my />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\AudioPlayer.jsx",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Main.jsx",["305","306"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Tabs from \"./Tabs\";\r\nimport Block from \"./Block\";\r\nimport Table from \"./Table\";\r\nimport GroupBlock from \"./GroupBlock\";\r\nimport GroupDetails from \"../GroupDetails\";\r\nimport TableDetail from \"./TableDetails\";\r\n\r\nconst Main = ({ group }) => {\r\n  const currentPath = window.location.pathname;\r\n  const [toggler, setToggler] = useState(false);\r\n  const [isGroupAdded, setIsGroupAdded] = useState(false);\r\n  const [fromDate, setFromDate] = useState();\r\n  const [toDate, setToDate] = useState();\r\n  const [groups, setGroup] = useState();\r\n  const [transformedData, setTransfromedData] = useState();\r\n  const [filterData, setFilterData] = useState([]);\r\n  const [allGroups, setAllGroups] = useState();\r\n\r\n  // Extract the string after the last slash (/)\r\n  const pathSegments = currentPath.split(\"/\");\r\n  const lastSegment = pathSegments[pathSegments.length - 2];\r\n\r\n  useEffect(()=>{\r\n  }, [allGroups, setAllGroups])\r\n\r\n\r\n  return (\r\n    <div className=\"mainBg p-5 h-screen\">\r\n      <Navbar />\r\n      <Tabs />\r\n      {group ? <GroupBlock\r\n        setToggler={setToggler}\r\n        toggler={toggler}\r\n        fromDate={fromDate}\r\n        setFromDate={setFromDate}\r\n        toDate={toDate}\r\n        setToDate={setToDate}\r\n        group={groups}\r\n        setGroup={setGroup}\r\n        filterData={filterData} setFilterData={setFilterData}\r\n        setAllGroups={setAllGroups}\r\n        allGroups={allGroups}\r\n\r\n      /> : <Block isGroupAdded={isGroupAdded} setIsGroupAdded={setIsGroupAdded} />}\r\n      {lastSegment == \"group-details\" ? (\r\n        <TableDetail\r\n          toggler={toggler}\r\n          fromDate={fromDate}\r\n          toDate={toDate}\r\n          group={groups}\r\n          setGroup={setGroup}\r\n          transformedData={transformedData}\r\n          setTransfromedData={setTransfromedData}\r\n          filterData={filterData}\r\n          setFilterData={setFilterData}\r\n          setAllGroups={setAllGroups}\r\n          allGroups={allGroups}\r\n        />\r\n      ) : (\r\n        <Table isGroupAdded={isGroupAdded} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\ConcurrentForm.jsx",["307"],[],"import React, { useState, useEffect } from \"react\"\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nconst apiURL = process.env.REACT_APP_BASE_URL_LIVE;\r\n\r\n\r\nconst ConcurrentForm = () => {\r\n    const { id } = useParams();\r\n    const [passwordVisible, setPasswordVisible] = useState(false)\r\n    const [concur, setConcur] = useState()\r\n    const [formData, setFormData] = useState({\r\n        sip_ip: \"\",\r\n        port: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    //update handler\r\n    const updateHandler = () => {\r\n        console.log(\"update handler called ::\", formData)\r\n        //update current setting api call\r\n        axios.post(`${apiURL}/api/updateSetting`, formData).then((res) => {\r\n            setFormData({\r\n                sip_ip: res.data.SIP_IP,\r\n                port: res.data.PORT,\r\n                username: res.data.UserName,\r\n                password: res.data.Password,\r\n            });\r\n        }).catch((err) => {\r\n            console.log(\"error ::\", err)\r\n        });\r\n\r\n        const conData = {\r\n            con: concur\r\n          };\r\n\r\n        axios.post(`${apiURL}/api/concurrent-number`, conData).then((res) => {\r\n            console.log(\"response :::\", res)\r\n        }).catch((err) => {\r\n            console.log(\"error ::\", err)\r\n        });\r\n\r\n\r\n        alert('Updated Concurrent Number in FreePbx')\r\n    }\r\n\r\n    //handle change\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        axios.get(`${apiURL}/api/getSipSetting`).then((res) => {\r\n            console.log('res', res.data.data)\r\n            setFormData({\r\n                sip_ip: res.data.data.SIP_IP,\r\n                port: res.data.data.Port,\r\n                username: res.data.data.UserName,\r\n                password: res.data.data.Password,\r\n            })\r\n        }).catch((err) => {\r\n            alert('Error Fetching details from Server')\r\n            console.log(\"error ::\", err)\r\n        });\r\n\r\n        axios.get(`${apiURL}/api/concurrent-number`)\r\n            .then((res) => {\r\n                setConcur(res?.data?.concurrentNumber?.con)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return <>\r\n\r\n        <div class=\"w-full max-w-xs\" style={{ margin: 'auto', marginTop: '10rem' }}>\r\n            <form class=\"bg-white shadow-lg border-2 rounded px-8 pt-6 pb-8 mb-4\">\r\n\r\n\r\n                <div class=\"mb-4\">\r\n                    <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        SIP IP\r\n                    </label>\r\n                    <input\r\n                        name=\"sip_ip\"\r\n                        value={formData?.sip_ip}\r\n                        onChange={handleChange}\r\n                        class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"SIP IP\" />\r\n                </div>\r\n\r\n                <div class=\"mb-4\">\r\n                    <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        Port\r\n                    </label>\r\n                    <input\r\n                        name=\"port\"\r\n                        value={formData?.port}\r\n                        onChange={handleChange}\r\n                        class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Port\" />\r\n                </div>\r\n\r\n                <div class=\"mb-4\">\r\n                    <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        UserName\r\n                    </label>\r\n                    <input\r\n                        name=\"username\"\r\n                        value={formData?.username}\r\n                        onChange={handleChange}\r\n                        class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Username\" />\r\n                </div>\r\n\r\n                <div class=\"mb-4\" style={{ position: \"relative\" }}>\r\n                    <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        type={passwordVisible ? 'text' : 'password'}\r\n                        name=\"password\"\r\n                        value={formData?.password}\r\n                        onChange={handleChange}\r\n                        class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                        id=\"username\"\r\n                        placeholder=\"password\" />\r\n                    <span className=\"password-toggle\" style={{\r\n                        position: \"absolute\",\r\n                        top: \"2.5rem\",\r\n                        right: \" 1rem\",\r\n                    }} onClick={() => setPasswordVisible(!passwordVisible)}>\r\n                        {passwordVisible ? <FaEye /> : <FaEyeSlash />}\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"mb-4\">\r\n                    <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        Concurrent Calls\r\n                    </label>\r\n                    <input\r\n                        value={concur}\r\n                        onChange={(e) => { setConcur(e.target.value) }}\r\n                        name=\"concurrent Calls\"\r\n                        class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Concurrent Calls\" />\r\n                </div>\r\n\r\n\r\n                {/* <div class=\"mb-4\">\r\n                    <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        Concurrent Calls\r\n                    </label>\r\n                    <input\r\n                        name=\"concurrent_call\"\r\n                        value={formData?.concurrent_call}\r\n                        onChange={handleChange}\r\n                        class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Concurrent Connection\" />\r\n                </div> */}\r\n\r\n                <div class=\"flex items-center justify-between\">\r\n                    <button class=\"w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\" onClick={() => {\r\n                        updateHandler()\r\n                    }}>\r\n                        Update\r\n                    </button>\r\n\r\n                </div>\r\n            </form >\r\n\r\n        </div >\r\n\r\n    </>\r\n}\r\n\r\nexport default ConcurrentForm",[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Card.jsx",["308","309","310"],[],"\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst apiURL = process.env.REACT_APP_BASE_URL_LIVE;\r\n\r\n\r\nconst Card = ({ message, para, lineBottom, marginLeft, background, color, index, id, disabled }) => {\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n\r\n\r\n  const handleOpenEdit = () => {\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setIsEditModalOpen(false);\r\n  };\r\n\r\n  const handleUploadAudioFile = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  const handleCloseUpload = () => {\r\n    setIsUploadModalOpen(false);\r\n  };\r\n\r\n\r\n  const handleChangeText = () => {\r\n    let data = { currentMessage, currentPara, index }\r\n    data = { ...data, id: id }\r\n    axios.post('https://api.aivoip.org/api/edit-text-message', data)\r\n      .then((res) => {\r\n        console.log('Response ::::', res.status)\r\n        if (res.status == 200) {\r\n          console.log(res.data)\r\n          alert('Your data has been saved')\r\n          window.location.reload();\r\n        } else {\r\n          alert(\"Failed to update your message\")\r\n          console.log('Response ::::', res.status)\r\n        }\r\n      }).catch((err) => {\r\n        alert(\"Failed to update your message\")\r\n\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  const handleUploadFile = () => {\r\n    if (!file) {\r\n      console.log('No file selected.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('sales_automation_messages', file);\r\n    formData.append('index', index)\r\n\r\n\r\n    fetch(`${apiURL}/api/upload-audio`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then((response) => alert('Audio File Uploaded Successfully'))\r\n      .then((data) => {\r\n        console.log('Upload response:', data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error uploading audio:', error);\r\n      });\r\n\r\n\r\n    // fetch(`${APIURL}/api/upload-audio`, {\r\n    //   method: 'POST',\r\n    //   body: formData,\r\n    // })\r\n    //   .then((response) => alert('Audio File Uploaded Successfully') )\r\n    //   .then((data) => {\r\n    //     console.log('Upload response:', data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error('Error uploading audio:', error);\r\n    //   });\r\n\r\n    setIsUploadModalOpen(false);\r\n  };\r\n\r\n  const [currentMessage, setCurrentMessage] = useState(message)\r\n  const [currentPara, setCurrentPara] = useState(para)\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"w-2/12 card p-5 rounded mb-5\"\r\n      style={{ marginLeft: marginLeft, background: background }}\r\n    >\r\n      <div className={lineBottom ? \"container\" : \"\"}>\r\n        <p className=\"card__para\" style={{ color: color }}>\r\n          {message}\r\n        </p>\r\n        <h2 className=\"card__heading\" style={{ color: color }}>\r\n          {para}\r\n        </h2>\r\n        {\r\n          !disabled && <>\r\n            <div className=\"flex justify-end gap-3\">\r\n              {/* Step 3: Add the modal trigger buttons */}\r\n              <button\r\n                onClick={handleOpenEdit}\r\n                className=\"icon block text-white font-medium rounded-lg text-sm text-center\"\r\n              >\r\n                <img src=\"/imgs/edit.svg\" />\r\n              </button>\r\n              <button\r\n                onClick={handleUploadAudioFile}\r\n                className=\"icon block text-white font-medium rounded-lg text-sm text-center\"\r\n              >\r\n                <img src=\"/imgs/microphone.svg\" />\r\n              </button>\r\n            </div>\r\n          </>\r\n        }\r\n\r\n      </div>\r\n\r\n      {isEditModalOpen && (\r\n        <div\r\n          id=\"defaultModal\"\r\n          className=\"fixed top-0 left-0 right-0 z-50 flex items-center justify-center w-full h-full bg-black bg-opacity-60\"\r\n        >\r\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700 p-6\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n              Edit Modal\r\n            </h3>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"first_name\"\r\n                class=\"mb-2 mt-5 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                value={currentMessage}\r\n                onChange={(e) => { setCurrentMessage(e.target.value) }}\r\n                required\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                id=\"first_name\"\r\n                class=\"mt-2 mb-5 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                value={currentPara}\r\n                onChange={(e) => { setCurrentPara(e.target.value) }}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              onClick={handleCloseEdit}\r\n              className=\"text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800\"\r\n            >\r\n              Close\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => {\r\n                handleCloseEdit()\r\n                handleChangeText()\r\n              }\r\n              }\r\n              className=\"ml-3 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\"\r\n            >\r\n              Save\r\n            </button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isUploadModalOpen && (\r\n        <div\r\n          id=\"defaultModal\"\r\n          className=\"fixed top-0 left-0 right-0 z-50 flex items-center justify-center w-full h-full bg-black bg-opacity-60\"\r\n        >\r\n          {/* Placeholder UI for the upload modal */}\r\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700 p-6\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n              Upload Your Audio File\r\n            </h3>\r\n\r\n            <input\r\n              class=\"my-5 block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"\r\n              id=\"file_input\"\r\n              type=\"file\"\r\n              onChange={(e) => { setFile(e.target.files[0]) }}\r\n            />\r\n\r\n            {/* Your upload file UI components can go here */}\r\n            <button\r\n              onClick={handleCloseUpload}\r\n              className=\"text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800\"\r\n            >\r\n              Close\r\n            </button>\r\n\r\n            <button\r\n              onClick={handleUploadFile}\r\n              className=\"ml-3 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\"\r\n            >\r\n              Upload\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Heading.jsx",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Button.jsx",["311"],[],"import React from 'react'\r\n\r\nconst Button = ({text, icon, active, danger, my, onClick, getNumber, disabled}) => {\r\n  return (\r\n    <button getNumber disabled = {disabled} onClick={onClick} className={`btn btn-primary flex gap-1 p-2 rounded items-center ${my ? 'my-2' : ''}  w-full ${danger ? 'danger--button' : active ?  'bg--active white-color' : 'button--main--color'} `}>\r\n        {icon && <img src={icon} className='button--image' /> }\r\n        {text && <p>{text}</p>}  \r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Navbar.jsx",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Block.jsx",["312"],[],"import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\"\r\nimport Button from './Button'\r\nconst apiURL = process.env.REACT_APP_BASE_URL_LIVE;\r\n\r\nconst Block = ({ isGroupAdded, setIsGroupAdded }) => {\r\n  const [groupName, setGroupName] = useState();\r\n\r\n  const handleGroup = () => {\r\n    axios\r\n      .post(`${apiURL}/api/create-group`, {\r\n        name: groupName,\r\n        phoneNumbers: [],\r\n      })\r\n      .then((response) => {\r\n        setIsGroupAdded(!isGroupAdded)\r\n        setGroupName()\r\n        alert(\"Success: Group Created Successfully\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='bg-white shadow-md sm:rounded-lg flex justify-end p-8'>\r\n      <div className=\"w-full flex gap-2 items-center\">\r\n        <div className=\"w-2/12\">\r\n          <p className=\"font-medium\">Group Name</p>\r\n        </div>\r\n        <div className=\"w-8/12\">\r\n          <input\r\n\r\n            type=\"text\"\r\n            className=\"group--block--input rounded\"\r\n            value={groupName}\r\n            onChange={(e) => {\r\n              setGroupName(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"w-2/12\">\r\n          <Button disabled={!groupName} icon={'/imgs/plus.png'} onClick={handleGroup} text='Add Group' active />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Block","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Tabs.jsx",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\GroupBlock.jsx",["313","314","315","316","317","318","319","320","321","322","323","324","325"],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Table.jsx",["326","327","328"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Chat from \"./Chat\";\r\nimport Modal from \"./Modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst apiUrl = process.env.REACT_APP_BASE_URL_LIVE;\r\n\r\nconst Table = ({ isGroupAdded }) => {\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = useState(false);\r\n  const [groups, setGroups] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(`${apiUrl}/api/groups`).then((res) => {\r\n      setGroups(res.data.groups);\r\n    });\r\n  }, [isGroupAdded]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal open={open} setOpen={setOpen} />\r\n      <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-10\">\r\n        <table class=\"w-full text-sm text-left text-gray-500 dark:text-gray-400 bg-white\">\r\n          <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n            <tr>\r\n              <th scope=\"col\" class=\"px-6 py-3\">\r\n                Group Name\r\n              </th>\r\n              <th scope=\"col\" class=\"px-6 py-3\">\r\n                Total Phone No.\r\n              </th>\r\n              <th scope=\"col\" class=\"px-6 py-3\">\r\n                Total Answered\r\n              </th>\r\n              <th scope=\"col\" class=\"px-6 py-3\">\r\n                Total Duration\r\n              </th>\r\n              <th scope=\"col\" class=\"px-6 py-3\">\r\n                Created Date/Time\r\n              </th>\r\n              <th scope=\"col\" class=\"px-6 py-3 cursor-pointer\">\r\n                Edit\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {groups?.map((item) => (\r\n              <tr class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\r\n                <th\r\n                  scope=\"row\"\r\n                  class=\"flex items-center px-6 py-4 text-gray-900 whitespace-nowrap dark:text-white\"\r\n                >\r\n                  <img\r\n                    class=\"w-10 h-10 rounded-full\"\r\n                    src=\"/imgs/gallery.svg\"\r\n                    alt=\"Jese image\"\r\n                  />\r\n                  <div class=\"pl-3\">\r\n                    <div class=\"text-base font-semibold\">{item?.name}</div>\r\n                  </div>\r\n                </th>\r\n                <td class=\"px-6 py-4 text-center\">{item?.totalPhoneNumbers}/10283</td>\r\n                <td class=\"px-6 py-4 text-center\">{item?.totalAnswered}</td>\r\n                <td class=\"px-6 py-4 text-center\">{item?.totalDuration}</td>\r\n                <td class=\"px-6 py-4 text-center\">{item?.createdAt}</td>\r\n                <td\r\n                  class=\"px-6 py-4 text-center cursor-pointer\"\r\n                  onClick={() => navigate(`/group-details/${item?._id}`)}\r\n                >\r\n                  <img src=\"/imgs/edit.svg\" />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\TableDetails.jsx",["329","330","331","332","333","334","335"],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\misc\\Modal.jsx",["336","337","338","339","340","341","342","343","344"],[],"    import React, { useRef, useState, useEffect } from \"react\";\r\n    import { useNavigate } from \"react-router-dom\";\r\n    import AudioPlayer from \"./AudioPlayer\";\r\n    import axios from \"axios\";\r\n\r\n    const apiUrl = process.env.REACT_APP_BASE_URL_LIVE;\r\n\r\n    const Modal = ({ open, setOpen, currentChat, id, groupNumber }) => {\r\n    const navigate = useNavigate();\r\n    const [chat, setChat] = useState()\r\n    const [userChat, setUserChat] = useState();\r\n    const [chatData, setChatData] = useState([]);\r\n    const handleHomeNav = () => {\r\n        navigate(\"/\");\r\n    };\r\n    const myref = useRef(null);\r\n\r\n    const handlePlayMessage = (message) => {\r\n        let newAudioUrl = `http://16.163.178.109/aivoip/speech/${message}`\r\n        let ele = myref.current\r\n        let source = ele.querySelector('source')\r\n        source.src = newAudioUrl || null\r\n\r\n\r\n        myref.current.pause();\r\n        myref.current.currentTime = 0;\r\n\r\n\r\n        myref.current.pause();\r\n        myref.current.currentTime = 0;\r\n    \r\n        source.src = newAudioUrl || null;\r\n        myref.current.load(); // Load the new source\r\n    \r\n        // Once the new source is loaded, play the audio\r\n        myref.current.addEventListener('loadeddata', () => {\r\n            myref.current.play();\r\n        });\r\n\r\n\r\n        // // clear pervious audio so that i can load this newone without interupting pervious load\r\n        // myref.current.load(); \r\n        // myref.current.play(); \r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchChatData = () => {\r\n          const data = {\r\n            groupId: id,\r\n            number: groupNumber, // Make sure you provide the actual number here\r\n          };\r\n          axios\r\n            .post(`${apiUrl}/api/get-chat-text`, data)\r\n            .then((response) => {\r\n              const chatText = response.data.chatText;\r\n              console.log(chatText);\r\n              // Update the chat data in your component state\r\n              setChatData(chatText);\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Error fetching chat text:\", error);\r\n            });\r\n        };\r\n    \r\n        if (open) {\r\n          // Fetch chat data when the modal is opened\r\n          fetchChatData();\r\n    \r\n          // Set up an interval to fetch chat data every 10 seconds\r\n          const intervalId = setInterval(fetchChatData, 10000);\r\n    \r\n          // Clean up the interval when the component unmounts or the modal is closed\r\n          return () => clearInterval(intervalId);\r\n        }\r\n      }, [open, id, groupNumber]);\r\n\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n  \r\n    \r\n\r\n    const combinedMessages = [];\r\n    const maxLength = Math.max(chat?.bot.length, chat?.user?.length);\r\n    for (let i = 0; i < maxLength; i++) {\r\n        if (chat.bot[i]) combinedMessages.push(chat.bot[i]);\r\n        if (chat.user[i]) combinedMessages.push(chat.user[i]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {open && (\r\n            <>\r\n            <div\r\n                id=\"readProductModal\"\r\n                tabIndex=\"-1\"\r\n                aria-hidden=\"true\"\r\n                className=\"open overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-modal md:h-full\"\r\n            >\r\n                <div className=\"custom__modal relative p-4 w-full max-w-2xl h-full md:h-auto\">\r\n                <div className=\"chatroom bg-white font-sans\">\r\n                    <header className=\" bg-white h-2xl px-10 py-2 z-10\">\r\n                    <div className=\"flex gap-5 justify-between\">\r\n                        <h1\r\n                        className=\"text-lg font-bold\"\r\n                        style={{ color: \"#377D8D\" }}\r\n                        >\r\n                        Call details\r\n                        </h1>\r\n                        <div className=\"flex gap-6\">\r\n                        {/* <div className=\"flex gap-2\">\r\n                            <button className=\"bg-gray-300 text-sm px-1 py-1 border border-black font-medium rounded-sm\">\r\n                            Last Pass\r\n                            </button>\r\n                            <button className=\"bg-gray-300 text-sm px-1 py-1 border border-black font-medium rounded-sm\">\r\n                            Next Pass\r\n                            </button>\r\n                        </div> */}\r\n                        <div className=\"flex items-center\">\r\n                            <button>\r\n                            <svg\r\n                                xmlns=\"http:www.w3.org/2000/svg\"\r\n                                fill=\"none\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                strokeWidth=\"1.5\"\r\n                                stroke=\"currentColor\"\r\n                                className=\"w-6 h-6\"\r\n                            >\r\n                                <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                d=\"M12 6.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 18.75a.75.75 0 110-1.5.75.75 0 010 1.5z\"\r\n                                />\r\n                            </svg>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"flex items-center\">\r\n                            <button\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                            >\r\n                            <svg\r\n                                xmlns=\"http:www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"currentColor\"\r\n                                class=\"w-6 h-6\"\r\n                            >\r\n                                <path\r\n                                fill-rule=\"evenodd\"\r\n                                d=\"M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z\"\r\n                                clip-rule=\"evenodd\"\r\n                                />\r\n                            </svg>\r\n                            </button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-row justify-between items-center\">\r\n                        <div className=\"flex flex-col gap-2\">\r\n                        {/* <p className=\"font-serif font-medium text-sm\">\r\n                            Testing-083474376473\r\n                        </p>\r\n                        <div className=\"mb-5\">\r\n                            <p className=\"text-sm\">Celler Id: 34345434</p>\r\n                            <p className=\"text-sm\">Call duration: 323</p>\r\n                        </div> */}\r\n                        </div>\r\n                        <div className=\"flex gap-1\">\r\n                        {/* <button\r\n                            className=\"bg-blue-500 text-xs px-1 py-1 border rounded-xl text-white\"\r\n                            style={{ backgroundColor: \"#377D8D\" }}\r\n                        >\r\n                            To be screend\r\n                        </button>\r\n                        <button\r\n                            className=\"bg-blue-900 text-xs px-1 py-1 border rounded-xl text-white\"\r\n                            style={{ backgroundColor: \"#677B7C\" }}\r\n                        >\r\n                            To be classified\r\n                        </button> */}\r\n                        </div>\r\n                        <div className=\"flex gap-2\">\r\n                        {/* <button>\r\n                            <svg\r\n                            xmlns=\"http:www.w3.org/2000/svg\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            stroke-width=\"1.5\"\r\n                            stroke=\"currentColor\"\r\n                            class=\"w-6 h-6\"\r\n                            style={{ color: \"#377D8D\" }}\r\n                            >\r\n                            <path\r\n                                stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\"\r\n                                d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                            />\r\n                            <path\r\n                                stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\"\r\n                                d=\"M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z\"\r\n                            />\r\n                            </svg>\r\n                        </button> */}\r\n                        {/* <button>\r\n                            <svg\r\n                            xmlns=\"http:www.w3.org/2000/svg\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            strokeWidth=\"1.5\"\r\n                            stroke=\"currentColor\"\r\n                            className=\"w-6 h-6\"\r\n                            style={{ color: \"#377D8D\" }}\r\n                            >\r\n                            <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\"\r\n                            />\r\n                            </svg>\r\n                        </button> */}\r\n                        {/* <button>\r\n                            <svg\r\n                            xmlns=\"http:www.w3.org/2000/svg\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            strokeWidth=\"1.5\"\r\n                            stroke=\"currentColor\"\r\n                            className=\"w-6 h-6\"\r\n                            style={{ color: \"#377D8D\" }}\r\n                            >\r\n                            <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                d=\"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z\"\r\n                            />\r\n                            </svg>\r\n                        </button> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"border border-gray-200\"></div>\r\n                    </header>\r\n                    <div>\r\n                    {\r\n                        chatData?.map((item, index)=>{\r\n                            console.log('hello world')\r\n                            return <>\r\n                              <div className=\"px-10 py-2 z-0\" key={index}>\r\n                            {item?.user  == 'bot' ? (\r\n                                <div className=\"flex gap-5 my-2\">\r\n                                \r\n                                <img src=\"/imgs/bot.svg\" alt=\"Bot Avatar\" />\r\n                                <div>\r\n                                    <div className=\"div flex justify-between\">\r\n                                    <div className=\"flex items-center justify-start gap-2\">\r\n                                        <h4 className=\"text-bold font-serif text-lg\">\r\n                                        Bot\r\n                                        </h4>\r\n                                        <button>\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            stroke-width=\"1.5\"\r\n                                            stroke=\"currentColor\"\r\n                                            class=\"w-10 h-10 \"\r\n                                            style={{ color: \"#377D8D\" }}\r\n                                        >\r\n                                            <path\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                                            />\r\n                                            <path\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            d=\"M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z\"\r\n                                            />\r\n                                        </svg>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"flex\">\r\n                                        <p>\r\n                                            Date: {item?.date}\r\n                                        </p>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"w-4/5 border rounded-lg\">\r\n                                    <p className=\"bg-gray-100 px-4 py-3\">\r\n                                        {item?.text ? item?.text : 'No Messgae Found'}\r\n                                    </p>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"flex gap-5 flex-row-reverse my-2\">\r\n                              \r\n                                <div className=\"bg-gray-200 border border-gray-200 rounded-3xl w-12 h-12\" />\r\n                                <div className=\"flex flex-col justify-end\">\r\n                                    <div className=\"flex items-center justify-start flex-row-reverse gap-10\">\r\n                                    <h4 className=\"text-bold font-serif text-lg\">\r\n                                        User\r\n                                    </h4>\r\n                                    <p>{item?.chat ? item?.chat : 'No Messgae Found'}</p>\r\n                                    <button>\r\n                                        {/* User Icon */}\r\n                                        <svg\r\n                                        xmlns=\"http:www.w3.org/2000/svg\"\r\n                                        fill=\"none\"\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        strokeWidth=\"1.5\"\r\n                                        stroke=\"currentColor\"\r\n                                        className=\"w-10 h-10\"\r\n                                        style={{ color: \"#377D8D\" }}\r\n                                        >\r\n                                        <svg\r\n                                            xmlns=\"http:www.w3.org/2000/svg\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            strokeWidth=\"1.5\"\r\n                                            stroke=\"currentColor\"\r\n                                            className=\"w-6 h-6\"\r\n                                            style={{ color: \"#377D8D\" }}\r\n                                        >\r\n                                            <path\r\n                                            strokeLinecap=\"round\"\r\n                                            strokeLinejoin=\"round\"\r\n                                            d=\"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z\"\r\n                                            />\r\n                                        </svg>\r\n                                        </svg>\r\n                                    </button>\r\n                                    </div>\r\n                                    <div className=\"flex flex-col justify-end\">\r\n                                    <p\r\n                                        className=\"self-end px-4 border rounded-lg py-3 w-4/5 text-left text-white\"\r\n                                        style={{ backgroundColor: \"#377D8D\" }}\r\n                                    >\r\n                                       {item?.chat ? item?.chat : 'No Messgae Found'}\r\n                                    </p>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            )}\r\n                            </div>\r\n                            </>\r\n                          \r\n                        })\r\n                    }\r\n\r\n                    {/* {selectedMessage && (\r\n                    <audio ref={audioRef} controls >\r\n                         <source src='http://103.18.20.195:8080/speech/1001-1690571848.52-1690571850.wav' type=\"audio/wav\" />\r\n                    </audio>\r\n                    )} */}\r\n                     <audio ref={myref} controls style={{display: 'none'}}>\r\n                         <source src='http://103.18.20.195:8080/speech/1001-1690571848.52-1690571850.wav'  type=\"audio/wav\" />\r\n                    </audio>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )}\r\n        </>\r\n    );\r\n    };\r\n\r\n    export default Modal;\r\n","C:\\laragon\\www\\sales-automation\\sales\\src\\socket-client.js",[],[],"C:\\laragon\\www\\sales-automation\\sales\\src\\components\\Setting.js",["345","346","347","348","349"],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\index.js",[],[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\App.js",["350","351","352"],[],"import React from \"react\";\r\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport GroupDetails from \"./components/GroupDetails\";\r\nimport Speech from \"./components/Speech\";\r\nimport Chat from \"./components/misc/Chat\";\r\nimport ConcurrentCalls from \"./components/ConcurrentCalls\";\r\nimport Setting from \"./components/Setting\";\r\nimport SocketClient from \"./socket-client\";\r\nimport AddDoctor from \"./components/AddDoctor\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Dashboard />} />\r\n        <Route path=\"/group-details/:id\" element={<GroupDetails />} />\r\n        <Route path=\"/add-doctor\" element={<AddDoctor />} />\r\n        <Route path=\"/chat\" element={<Chat />} />\r\n        <Route path=\"/concurrent-calls\" element={<ConcurrentCalls />} />\r\n        <Route path=\"/setting\" element={<Setting />} />\r\n        <Route path=\"/socket\" element={<SocketClient  />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\laragon\\www\\doctor-manager\\sales\\src\\reportWebVitals.js",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\socket-client.js",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\Setting.js",["353","354","355","356","357","358"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Sidebar from './misc/Sidebar';\r\nimport Navbar from './misc/Navbar';\r\nimport Button from \"./misc/Button\";\r\n\r\nconst apiURL = process.env.REACT_APP_BASE_URL_LOCAL\r\nfunction Setting() {\r\n\r\n    const navigate = useNavigate();\r\n    const [settings, setSettings] = useState([\r\n        {\r\n            id: \"1\",\r\n            sip_ip: \"16.163.178.109\",\r\n            port: \"8000\",\r\n            username: \"1601\",\r\n            password: \"ab975@yTpL9\",\r\n        }\r\n    ]);\r\n\r\n    console.log('are you even there?')\r\n \r\n\r\n\r\n    //update setting \r\n    const updateHandler = (id) => {\r\n        console.log(\"update handler\", id)\r\n    }\r\n    // delete setting \r\n    const deleteHandler = (id) => {\r\n        console.log(\"delete handler\")\r\n\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"flex h-screen\">\r\n            <div className=\"w-2/12 h-screen\"><Sidebar /></div>\r\n            <div className=\"mainBg w-10/12\">\r\n                <div style={{ padding: \"2rem\" }}>\r\n                    <Navbar />\r\n                    {/* <Modal open={open} setOpen={setOpen} currentChat={currentChat} /> */}\r\n                    <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-10\">\r\n                        <div className=\"w-2/12\" style={{ float: \"right\", margin: \"0.5rem 0\" }}>\r\n                            <Button onClick={() => navigate(\"/concurrent-calls\")} icon={'/imgs/plus.png'} text='Add Setting' active />\r\n                        </div>\r\n                        <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400 bg-white\">\r\n                            <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"px-6 py-3  text-center\">\r\n                                        SIP IP\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3  text-center\">\r\n                                        PORT\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3  text-center\">\r\n                                        USER NAME\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3  text-center\">\r\n                                        PASSWORD\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3  text-center\">\r\n                                        CONCURRENT CALLS\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 cursor-pointer  text-center\">\r\n                                        Actions\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n\r\n                                {settings?.map((item, index) => {\r\n                                    return (\r\n                                        <tr className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\r\n                                            <th\r\n                                                scope=\"row\"\r\n                                                className=\"flex justify-center  items-center  py-4 text-gray-900 whitespace-nowrap dark:text-white\"\r\n                                            >\r\n                                                {/* <div className=\"\">\r\n                                                    <div className=\"text-base font-semibold\">{item?.sip_ip}</div>\r\n                                                </div> */}\r\n\r\n                                                <td className=\"px-6 py-0 text-center\">{item?.sip_ip}</td>\r\n                                            </th>\r\n                                            <td className=\"px-6 py-0 text-center\">{item?.port}</td>\r\n                                            <td className=\"px-6 py-0 text-center\">{item?.username}</td>\r\n                                            <td className=\"px-6 py-0 text-center\">{item?.password}</td>\r\n                                            <td className=\"px-6 py-0 text-center\">{item?.concurrent_call}</td>\r\n                                            <td\r\n                                                className=\"flex items-center px-6 py-4 text-center cursor-pointer\"\r\n                                            // onClick={() => {\r\n                                            //     setOpen(true);\r\n                                            // }}\r\n                                            >\r\n                                                <img className='py-0' src=\"/imgs/edit.svg\" onClick={() => updateHandler(item)} />\r\n                                                <img className='py-0' src=\"/imgs/delete.svg\" onClick={() => deleteHandler(item?.id)} />\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Setting\r\n","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\Dashboard.jsx",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\ConcurrentCalls.jsx",["359"],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\Speech.jsx",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\GroupDetails.jsx",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Chat.jsx",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Sidebar.jsx",["360","361","362"],[],"import React from \"react\";\r\nimport Heading from \"./Heading\";\r\nimport Button from \"./Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  const navigate = useNavigate();\r\n  const icons = [\r\n    \"/imgs/logo.svg\",\r\n    \"/imgs/qq.png\",\r\n    \"/imgs/status.svg\",\r\n    \"/imgs/document.svg\",\r\n    \"/imgs/notification.svg\",\r\n    \"/imgs/setting-2.svg\",\r\n    \"/imgs/logout.svg\",\r\n    \"/imgs/setting.svg\",\r\n  ];\r\n  const currentPath = window.location.pathname;\r\n\r\n  // Extract the string after the last slash (/)\r\n  const pathSegments = currentPath.split(\"/\");\r\n  const lastSegment = pathSegments[pathSegments.length - 2];\r\n\r\n  var addDoctor = false;\r\n  var group = false;\r\n  var setting = false;\r\n\r\n  console.log(window.location.origin);\r\n\r\n  if (pathSegments.includes(\"add-doctor\")) {\r\n    addDoctor = true;\r\n  }\r\n\r\n  if (\r\n    pathSegments.includes(\"group\") ||\r\n    pathSegments.includes(\"group-details\") ||\r\n    window.location.pathname == \"/\"\r\n  ) {\r\n    group = true;\r\n  }\r\n\r\n  if (pathSegments.includes(\"concurrent-calls\")) {\r\n    setting = true;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-5 flex flex-col justify-between h-screen\">\r\n      <div>\r\n        <div className=\"logo flex items-center gap-2\">\r\n          <img src={icons[0]} className=\"w-1/3\" />\r\n          <h1 className=\"sidebar__main__heading\">Sales</h1>\r\n        </div>\r\n        <Heading text={\"Main Menu\"} />\r\n        <div\r\n          onClick={() => {\r\n            navigate(\"/\");\r\n          }}\r\n        >\r\n          {group ? (\r\n            <Button text=\"Add Group\" icon={icons[1]} active my />\r\n          ) : (\r\n            <Button text=\"Add Group\" icon={icons[1]} my />\r\n          )}\r\n        </div>\r\n        {/* <div onClick={() => {\r\n          navigate('/group-details')\r\n        }}>\r\n          {\r\n            lastSegment == 'group-details' ? <Button text='Details' icon={icons[2]} active my /> : <Button text='Details' icon={icons[2]} my />\r\n          }\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            navigate(\"/add-doctor\");\r\n          }}\r\n        >\r\n          {addDoctor ? (\r\n            <Button text=\"Add Doctor\" icon={icons[3]} my active />\r\n          ) : (\r\n            <Button text=\"Add Doctor\" icon={icons[3]} my />\r\n          )}\r\n        </div>\r\n        {/* <Button text=\"Notification\" icon={icons[4]} my /> */}\r\n        <div\r\n          onClick={() => {\r\n            // navigate(\"/setting\");\r\n            navigate(\"/concurrent-calls\");\r\n          }}\r\n        >\r\n          {setting ? (\r\n            <Button text=\"Setting\" icon={icons[icons.length - 1]} my active />\r\n          ) : (\r\n            <Button text=\"Setting\" icon={icons[icons.length - 1]} my />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Navbar.jsx",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Button.jsx",["363"],[],"import React from 'react'\r\n\r\nconst Button = ({text, icon, active, danger, center, my, onClick, getNumber, disabled}) => {\r\n  return (\r\n    <button getNumber disabled = {disabled} onClick={onClick} className={`btn btn-primary ${center? 'text-center':'flex'} gap-1 p-2 rounded items-center ${my ? 'my-2' : ''}  w-full ${danger ? 'bg-red-700 text-white' : active ?  'bg--active white-color' : 'button--main--color'} `}>\r\n        {icon && <img src={icon} className='button--image' /> }\r\n        {text && <p>{text}</p>}  \r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Main.jsx",["364","365","366","367","368","369","370"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Tabs from \"./Tabs\";\r\nimport Block from \"./Block\";\r\nimport Table from \"./Table\";\r\nimport GroupBlock from \"./GroupBlock\";\r\nimport GroupDetails from \"../GroupDetails\";\r\nimport TableDetail from \"./TableDetails\";\r\n\r\nconst Main = ({ group }) => {\r\n  const currentPath = window.location.pathname;\r\n  const [toggler, setToggler] = useState(false);\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [fromDate, setFromDate] = useState();\r\n  const [toDate, setToDate] = useState();\r\n  const [filterData, setFilterData] = useState([]);\r\n  const [allGroups, setAllGroups] = useState();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [GroupAllDoctors, setGroupAllDoctor] = useState()\r\n  const [updateDoctor, setUpdateDoctor] = useState();\r\n\r\n  // Extract the string after the last slash (/)\r\n  const pathSegments = currentPath.split(\"/\");\r\n  const lastSegment = pathSegments[pathSegments.length - 2];\r\n\r\n  useEffect(()=>{\r\n  }, [allGroups, setAllGroups])\r\n\r\n\r\n  return (\r\n    <div className=\"mainBg p-5 h-screen\">\r\n      <Navbar />\r\n      <Tabs />\r\n      {group ? <GroupBlock\r\n        filterData={filterData} setFilterData={setFilterData}\r\n        setAllGroups={setAllGroups}\r\n        allGroups={allGroups}\r\n        doctors={doctors}\r\n        setDoctors={setDoctors}\r\n        isModalOpen={isModalOpen}\r\n        setIsModalOpen={setIsModalOpen}\r\n        updateDoctor={updateDoctor}\r\n        setUpdateDoctor={setUpdateDoctor}\r\n        isAdded={isAdded}\r\n        setIsAdded={setIsAdded}\r\n\r\n      /> : <Block isAdded={isAdded} setIsAdded={setIsAdded} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen}  />}\r\n      {lastSegment == \"group-details\" ? (\r\n        <TableDetail\r\n          fromDate={fromDate}\r\n          toDate={toDate}\r\n          filterData={filterData}\r\n          setFilterData={setFilterData}\r\n          setGroupAllDoctor={setGroupAllDoctor}\r\n          doctors={doctors}\r\n          setDoctors={setDoctors}\r\n          isModalOpen={isModalOpen}\r\n          setIsModalOpen={setIsModalOpen}\r\n          updateDoctor={updateDoctor}\r\n          setUpdateDoctor={setUpdateDoctor}\r\n          isAdded={isAdded}\r\n          setIsAdded={setIsAdded}\r\n        />\r\n      ) : (\r\n        <Table isAdded={isAdded} setIsAdded={setIsAdded} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\AudioPlayer.jsx",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\ConcurrentForm.jsx",["371","372","373","374"],[],"import React, { useState, useEffect } from \"react\"\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nconst apiURL = process.env.REACT_APP_BASE_URL_LIVE;\r\n\r\n\r\nconst ConcurrentForm = () => {\r\n    const { id } = useParams();\r\n    const [passwordVisible, setPasswordVisible] = useState(false)\r\n    const [concur, setConcur] = useState()\r\n    const [formData, setFormData] = useState({\r\n        sip_ip: \"\",\r\n        port: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    \r\n\r\n    //handle change\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    return <>\r\n\r\n        <div classname=\"w-full max-w-xs\" style={{ margin: 'auto', marginTop: '10rem' }}>\r\n            <form classname=\"bg-white shadow-lg border-2 rounded px-8 pt-6 pb-8 mb-4\">\r\n\r\n\r\n                <div classname=\"mb-4\">\r\n                    <label classname=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        SIP IP\r\n                    </label>\r\n                    <input\r\n                        name=\"sip_ip\"\r\n                        value={formData?.sip_ip}\r\n                        onChange={handleChange}\r\n                        classname=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"SIP IP\" />\r\n                </div>\r\n\r\n                <div classname=\"mb-4\">\r\n                    <label classname=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        Port\r\n                    </label>\r\n                    <input\r\n                        name=\"port\"\r\n                        value={formData?.port}\r\n                        onChange={handleChange}\r\n                        classname=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Port\" />\r\n                </div>\r\n\r\n                <div classname=\"mb-4\">\r\n                    <label classname=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        UserName\r\n                    </label>\r\n                    <input\r\n                        name=\"username\"\r\n                        value={formData?.username}\r\n                        onChange={handleChange}\r\n                        classname=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Username\" />\r\n                </div>\r\n\r\n                <div classname=\"mb-4\" style={{ position: \"relative\" }}>\r\n                    <label classname=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        type={passwordVisible ? 'text' : 'password'}\r\n                        name=\"password\"\r\n                        value={formData?.password}\r\n                        onChange={handleChange}\r\n                        classname=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                        id=\"username\"\r\n                        placeholder=\"password\" />\r\n                    <span className=\"password-toggle\" style={{\r\n                        position: \"absolute\",\r\n                        top: \"2.5rem\",\r\n                        right: \" 1rem\",\r\n                    }} onClick={() => setPasswordVisible(!passwordVisible)}>\r\n                        {passwordVisible ? <FaEye /> : <FaEyeSlash />}\r\n                    </span>\r\n                </div>\r\n\r\n                <div classname=\"mb-4\">\r\n                    <label classname=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        Concurrent Calls\r\n                    </label>\r\n                    <input\r\n                        value={concur}\r\n                        onChange={(e) => { setConcur(e.target.value) }}\r\n                        name=\"concurrent Calls\"\r\n                        classname=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Concurrent Calls\" />\r\n                </div>\r\n\r\n\r\n                {/* <div classname=\"mb-4\">\r\n                    <label classname=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        Concurrent Calls\r\n                    </label>\r\n                    <input\r\n                        name=\"concurrent_call\"\r\n                        value={formData?.concurrent_call}\r\n                        onChange={handleChange}\r\n                        classname=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Concurrent Connection\" />\r\n                </div> */}\r\n\r\n                <div classname=\"flex items-center justify-between\">\r\n                    <button classname=\"w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\" >\r\n                        Update\r\n                    </button>\r\n\r\n                </div>\r\n            </form >\r\n\r\n        </div >\r\n\r\n    </>\r\n}\r\n\r\nexport default ConcurrentForm","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Chart.jsx",["375"],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Heading.jsx",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Tabs.jsx",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Table.jsx",["376"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createGroup, deleteGroup, getAllGroups } from '../../api/api';  // Update this with your actual API functions\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Modal from \"./Modal\";\r\n\r\n\r\nconst Table = ({ isAdded, setIsAdded ,isModalOpen,setIsModalOpen }) => {\r\n  const navigate = useNavigate();\r\n  const [groups, setGroups] = useState([]);\r\n  const [updateGroup, setUpdateGroup] = useState('');\r\n  useEffect(() => {\r\n    const fetchGroups = async () => {\r\n      try {\r\n        const response = await getAllGroups();\r\n        setGroups(response);\r\n        console.log(response)\r\n      } catch (error) {\r\n        console.error('Error fetching groups:', error);\r\n        // Handle the error, display a message, or take appropriate action\r\n      }\r\n    };\r\n  \r\n    fetchGroups();\r\n  }, [isAdded]);\r\n\r\n  const handleGroupDetails = (groupId) => {\r\n    navigate(`/group-details/${groupId}`);\r\n  };\r\n\r\n  const handleUpdateGroup = (groupId) => {\r\n    setIsModalOpen(true);\r\n    setUpdateGroup(groupId)\r\n  }\r\n\r\n  const handleDeleteGroup = async (groupId) => {\r\n    try {\r\n      await deleteGroup(groupId);\r\n      toast.success('Group deleted successfully')\r\n  \r\n      // Fetch updated groups after deletion\r\n      const response = await getAllGroups();\r\n      setGroups(response);\r\n    } catch (error) {\r\n      toast.error('Unable to delete the group')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isAdded={isAdded} setIsAdded={setIsAdded} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} updateGroup={updateGroup} setUpdateGroup={setUpdateGroup}/>\r\n      {isAdded && (\r\n        <div className={`p-2 mt-4 ease-linear rounded ${isAdded.includes('Error') ? 'bg-red-500' : 'bg-green-500'} opacity-75`}>\r\n          <span className=\"close\" onClick={() => setIsAdded('')}>\r\n            &times;\r\n          </span>\r\n          <div className=\"text-white\">\r\n            {isAdded}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-10\">\r\n        <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400 bg-white\">\r\n          <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Group Name\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Status\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Last Time/Date Sent\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-center\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {groups?.map((item) => (\r\n              <tr className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\" key={item?._id}>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  {item?.data?.groupDetails?.groupName}\r\n                </td>\r\n                <td className={`px-6 py-4 whitespace-nowrap ${item?.status === 'sent' ? 'text-green-500' : item?.status === 'failed' ? 'text-red-500' : ''}`}>\r\n                  {item?.status === 'sent' ? 'Success' : item?.status === 'failed' ? 'Failed' : 'Idle'}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  {item?.lastSentAt ? item?.lastSentAt : 'Not Attempted'}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <button onClick={() => handleGroupDetails(item?.id)} className=\"text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700\">\r\n                    Details\r\n                  </button>\r\n                  <button onClick={() => handleUpdateGroup(item?.id)} className=\"focus:outline-none text-white bg-yellow-400 hover:bg-yellow-500 focus:ring-4 focus:ring-yellow-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:focus:ring-yellow-900\">\r\n                    Update\r\n                  </button>\r\n                  <button onClick={() => handleDeleteGroup(item?.id)} className=\"focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\">\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\GroupBlock.jsx",["377","378","379","380","381","382"],[],"import React, { useEffect, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport Button from './Button';\r\nimport AddDoctorModal from './AddDoctorModal';\r\nimport { getDoctorsForGroup} from '../../api/api'; // Import the modal component for adding doctors\r\n\r\nconst Block = ({\r\n  filterData,\r\n  setFilterData,\r\n  doctors,\r\n  setDoctors,\r\n  isModalOpen, setIsModalOpen,\r\n  updateDoctor, setUpdateDoctor,\r\n  isAdded, setIsAdded\r\n}) => {\r\n  const [active, setActive] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [searchType, setSearchType] = useState('name');\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const { id } = useParams();\r\n\r\n  const handleSearchTypeChange = (e) => {\r\n    setSearchType(e.target.value);\r\n  };\r\n\r\n  const handleAddGroup = async () => {\r\n    setIsModalOpen(true);\r\n    setUpdateDoctor('')\r\n  }\r\n\r\n  const handleSearchValueChange = (e) => {\r\n    if(!e.target.value){\r\n      setFilterData(doctors)\r\n    }else{\r\n      setSearchValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleFilter = () => {\r\n    let filteredResults = [];\r\n\r\n   \r\n    if (searchValue) {\r\n      switch (searchType) {\r\n        case 'name':\r\n          filteredResults = doctors?.filter(\r\n            (item) => {\r\n              const itemName = item.data.doctorDetails.name.toLowerCase();\r\n              return itemName.includes(searchValue.toLowerCase());\r\n            }\r\n          );\r\n          break;\r\n        case 'city':\r\n          filteredResults = doctors?.filter(\r\n            (item) => {\r\n              const itemName = item.data.doctorDetails.city.toLowerCase();\r\n              return itemName.includes(searchValue.toLowerCase());\r\n            }\r\n          );\r\n          break;\r\n        case 'hospital':\r\n          filteredResults = doctors?.filter(\r\n            (item) => {\r\n              const itemName = item.data.doctorDetails.hospital.toLowerCase();\r\n              return itemName.includes(searchValue.toLowerCase());\r\n            }\r\n          );\r\n          break;\r\n        default:\r\n          filteredResults = doctors;\r\n          break;\r\n      }\r\n    } else {\r\n      filteredResults = doctors;\r\n    }\r\n    console.log(filteredResults)\r\n    setFilterData(filteredResults);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(isAdded)\r\n  },[])\r\n  useEffect(() => {\r\n    // Fetch doctor details for the group\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const doctorData = await getDoctorsForGroup(id);\r\n        setDoctors(doctorData);\r\n        setFilterData(doctorData)\r\n        // console.log(doctorData)\r\n      } catch (error) {\r\n        console.error('Error fetching doctor details:', error);\r\n      }\r\n    };\r\n    fetchDoctors();\r\n    // console.log(doctors);\r\n  }, [id, isAdded]);\r\n\r\n  return (\r\n    <div className=\"bg-white shadow-md sm:rounded-lg flex justify-center p-8 flex-wrap gap-3\">\r\n      \r\n\r\n      {/* Filter options */}\r\n      <div className=\"flex gap-2 w-9/12 items-center\">\r\n        <div className=\"w-6/12\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Value\"\r\n            value={searchValue}\r\n            onChange={handleSearchValueChange}\r\n            className=\"group--block--input rounded\"\r\n          />\r\n        </div>\r\n        <p className='font-medium'>By</p>\r\n        <div className=\"w-6/12\">\r\n          <select\r\n            value={searchType}\r\n            onChange={handleSearchTypeChange}\r\n            className=\"group--block--input rounded\"\r\n          >\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"city\">City</option>\r\n            <option value=\"hospital\">Hospital</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"w-3/12\">\r\n          <Button text=\"Filter\" active onClick={handleFilter} />\r\n            \r\n        </div>\r\n\r\n      {/* Rest of the component content */}\r\n\r\n      {errorMessage && (\r\n        <div className=\"p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400 absolute top-2 left-50\" role=\"alert\">\r\n          <span className=\"font-medium\">Danger alert!</span> {errorMessage}\r\n        </div>\r\n      )}\r\n    </div>\r\n    <div className=\"w-2/12 ml-10\">\r\n        <Button text=\"+ Add Doctor\" active onClick={handleAddGroup} />\r\n      </div>\r\n\r\n      <AddDoctorModal\r\n       isAdded={isAdded}\r\n       setIsAdded={setIsAdded}\r\n        isModalOpen={isModalOpen}\r\n        setIsModalOpen={() => setIsModalOpen(false)} \r\n        /* Add any other required props for the modal */\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Block.jsx",["383"],[],"import React, { useState } from 'react';\r\nimport Button from './Button';\r\nimport Modal from './Modal';\r\n\r\nconst Block = ({ isAdded, setIsAdded, isModalOpen, setIsModalOpen }) => {\r\n \r\n\r\n \r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"bg-white shadow-md sm:rounded-lg flex justify-end p-8\">\r\n      <div className=\"w-full flex gap-2 items-center\">\r\n      <div className=\"w-10/12\"></div>\r\n        <div className=\"w-2/12\">\r\n          <Button icon=\"/imgs/plus.png\" onClick={openModal} text=\"Add Group\" active />\r\n        </div>\r\n      </div>\r\n    <Modal isAdded={isAdded} setIsAdded={setIsAdded} isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen}/>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Block;\r\n","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\TableDetails.jsx",["384"],[],"import React, { useEffect, useState } from 'react';\r\n// import Modal from './Modal';\r\nimport DeleteModal from './DeleteModal'\r\nimport { useParams } from 'react-router-dom';\r\nimport AddDoctorModal from './AddDoctorModal';\r\nimport {deleteDoctor, getAllGroups } from '../../api/api';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst TableDetail = ({isAdded, setIsAdded ,isModalOpen, setIsModalOpen, fromDate, toDate, filterData, setFilterData, doctors,setDoctors, updateDoctor, setUpdateDoctor}) => {\r\n  \r\n  const { id } = useParams();\r\n  const [allGroups, setAllGroups] = useState([]);\r\n  const [currGroup, setCurrGroup] = useState();\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [confirmDelete, setConfirmDelete] = useState(false);\r\n  const [currDoctor, setCurrDoctor] = useState({\r\n    id: null,\r\n    name: null\r\n  })\r\n\r\n\r\n  const handleUpdateDoctor = async (doctorId) => {\r\n    setIsModalOpen(true);\r\n    setUpdateDoctor(doctorId)\r\n    console.log('Received doctorId:', doctorId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchGroups = async () => {\r\n      try {\r\n        const response = await getAllGroups();\r\n        setAllGroups(response);\r\n        // console.log(response)\r\n      } catch (error) {\r\n        console.error('Error fetching groups:', error);\r\n        // Handle the error, display a message, or take appropriate action\r\n      }\r\n    };\r\n  \r\n    fetchGroups();\r\n    // fetchDoctors();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    allGroups?.forEach((itm) => {\r\n      if (itm.id === id) {\r\n        setCurrGroup(itm?.data?.groupDetails?.groupName);\r\n      }\r\n    });\r\n  }, [allGroups, id]);\r\n  \r\n  useEffect(()=> {\r\n  },[filterData])\r\n\r\n  const handleDeleteDoctor = async (doctorId, doctorName) => {\r\n    try {\r\n      await deleteDoctor(id,doctorId);\r\n      // Perform any additional actions after successfully deleting the doctor\r\n      toast.success(`${doctorName} has been deleted successfully.`);\r\n    } catch (error) {\r\n      console.error('Error deleting doctor:', error);\r\n    }\r\n  };\r\n  const handleDoctorDeletion = () => {\r\n    setConfirmDelete(true)\r\n  }\r\n  const handleDeleteClick = (doctorId, doctorName) => {\r\n    setCurrDoctor({\r\n      id: doctorId,\r\n      name:doctorName\r\n    })\r\n    setOpenDelete(true);\r\n  };\r\n  const handleDeleteModalClose = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(confirmDelete) {\r\n    handleDeleteDoctor(currDoctor.id, currDoctor.name)\r\n    setConfirmDelete(false)\r\n    setOpenDelete(false);\r\n  }\r\n  },[confirmDelete])\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n    {isAdded && (\r\n        <div className={`p-2 mt-4 ease-linear rounded ${isAdded.includes('Error') ? 'bg-red-500' : 'bg-green-500'} opacity-75`}>\r\n          <span className=\"close\" onClick={() => setIsAdded('')}>\r\n            &times;\r\n          </span>\r\n          <div className=\"text-white\">\r\n            {isAdded}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div style={{ width: '100%' }} className=\"py-5 flex gap-5\">\r\n        <h1>Group Name:</h1>\r\n        <p>{currGroup}</p>\r\n      </div>\r\n      <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-10\">\r\n        <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400 bg-white\">\r\n        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400 text-center\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Name/ Designation\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Hospital\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                City\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Contact No.\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Email\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Adresses\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filterData.map((doctor, index) => (\r\n              <tr key={index} className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\r\n                <td className=\"px-6 py-4 text-gray-900 whitespace-nowrap dark:text-white\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"pl-3\">\r\n                      <div className=\"text-base font-semibold\">{doctor.data.doctorDetails.name}</div>\r\n                      <div>{doctor.data.doctorDetails.designation}</div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-6 py-4 text-center\">{doctor.data.doctorDetails.hospital}</td>\r\n                <td className=\"px-6 py-4 text-center\">{doctor.data.doctorDetails.city}</td>\r\n                <td className=\"px-6 py-4 text-center\">{doctor.data.doctorDetails.phone}</td>\r\n                <td className=\"px-6 py-4 text-center\">{doctor.data.doctorDetails.email}</td>\r\n                <td className=\"px-6 py-4 text-center\">{doctor.data.doctorDetails.clinicAddress}</td>\r\n                <td className=\"px-6 py-4 text-center\">\r\n                <button onClick={() => handleUpdateDoctor(doctor.id)} className=\"focus:outline-none text-white bg-yellow-400 hover:bg-yellow-500 focus:ring-4 focus:ring-yellow-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:focus:ring-yellow-900\">\r\n                    Update\r\n                  </button>\r\n                  <button onClick={() => handleDeleteClick(doctor.id,doctor.data.doctorDetails.name)} className=\"focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\">\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <DeleteModal show={openDelete} onClose={handleDeleteModalClose} onConfirm={handleDoctorDeletion} doctor={currDoctor} />\r\n      <AddDoctorModal\r\n        isModalOpen={isModalOpen}\r\n        setIsModalOpen={() => setIsModalOpen(false)}\r\n        updateDoctor={updateDoctor}\r\n        currentGroup={id}\r\n        isAdded={isAdded}\r\n        setIsAdded={setIsAdded}\r\n        /* Add any other required props for the modal */\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableDetail;\r\n","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Card.jsx",["385","386","387"],[],"\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst apiURL = process.env.REACT_APP_BASE_URL_LIVE;\r\n\r\n\r\nconst Card = ({ message, para, lineBottom, marginLeft, background, color, index, id, disabled }) => {\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n\r\n\r\n  const handleOpenEdit = () => {\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setIsEditModalOpen(false);\r\n  };\r\n\r\n  const handleUploadAudioFile = () => {\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  const handleCloseUpload = () => {\r\n    setIsUploadModalOpen(false);\r\n  };\r\n\r\n\r\n  const handleChangeText = () => {\r\n    let data = { currentMessage, currentPara, index }\r\n    data = { ...data, id: id }\r\n    axios.post('https://api.aivoip.org/api/edit-text-message', data)\r\n      .then((res) => {\r\n        console.log('Response ::::', res.status)\r\n        if (res.status == 200) {\r\n          console.log(res.data)\r\n          alert('Your data has been saved')\r\n          window.location.reload();\r\n        } else {\r\n          alert(\"Failed to update your message\")\r\n          console.log('Response ::::', res.status)\r\n        }\r\n      }).catch((err) => {\r\n        alert(\"Failed to update your message\")\r\n\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  const handleUploadFile = () => {\r\n    if (!file) {\r\n      console.log('No file selected.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('sales_automation_messages', file);\r\n    formData.append('index', index)\r\n\r\n\r\n    fetch(`${apiURL}/api/upload-audio`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then((response) => alert('Audio File Uploaded Successfully'))\r\n      .then((data) => {\r\n        console.log('Upload response:', data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error uploading audio:', error);\r\n      });\r\n\r\n\r\n    // fetch(`${APIURL}/api/upload-audio`, {\r\n    //   method: 'POST',\r\n    //   body: formData,\r\n    // })\r\n    //   .then((response) => alert('Audio File Uploaded Successfully') )\r\n    //   .then((data) => {\r\n    //     console.log('Upload response:', data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error('Error uploading audio:', error);\r\n    //   });\r\n\r\n    setIsUploadModalOpen(false);\r\n  };\r\n\r\n  const [currentMessage, setCurrentMessage] = useState(message)\r\n  const [currentPara, setCurrentPara] = useState(para)\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"w-2/12 card p-5 rounded mb-5\"\r\n      style={{ marginLeft: marginLeft, background: background }}\r\n    >\r\n      <div className={lineBottom ? \"container\" : \"\"}>\r\n        <p className=\"card__para\" style={{ color: color }}>\r\n          {message}\r\n        </p>\r\n        <h2 className=\"card__heading\" style={{ color: color }}>\r\n          {para}\r\n        </h2>\r\n        {\r\n          !disabled && <>\r\n            <div className=\"flex justify-end gap-3\">\r\n              {/* Step 3: Add the modal trigger buttons */}\r\n              <button\r\n                onClick={handleOpenEdit}\r\n                className=\"icon block text-white font-medium rounded-lg text-sm text-center\"\r\n              >\r\n                <img src=\"/imgs/edit.svg\" />\r\n              </button>\r\n              <button\r\n                onClick={handleUploadAudioFile}\r\n                className=\"icon block text-white font-medium rounded-lg text-sm text-center\"\r\n              >\r\n                <img src=\"/imgs/microphone.svg\" />\r\n              </button>\r\n            </div>\r\n          </>\r\n        }\r\n\r\n      </div>\r\n\r\n      {isEditModalOpen && (\r\n        <div\r\n          id=\"defaultModal\"\r\n          className=\"fixed top-0 left-0 right-0 z-50 flex items-center justify-center w-full h-full bg-black bg-opacity-60\"\r\n        >\r\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700 p-6\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n              Edit Modal\r\n            </h3>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"first_name\"\r\n                classname=\"mb-2 mt-5 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                value={currentMessage}\r\n                onChange={(e) => { setCurrentMessage(e.target.value) }}\r\n                required\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                id=\"first_name\"\r\n                classname=\"mt-2 mb-5 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                value={currentPara}\r\n                onChange={(e) => { setCurrentPara(e.target.value) }}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              onClick={handleCloseEdit}\r\n              className=\"text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800\"\r\n            >\r\n              Close\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => {\r\n                handleCloseEdit()\r\n                handleChangeText()\r\n              }\r\n              }\r\n              className=\"ml-3 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\"\r\n            >\r\n              Save\r\n            </button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isUploadModalOpen && (\r\n        <div\r\n          id=\"defaultModal\"\r\n          className=\"fixed top-0 left-0 right-0 z-50 flex items-center justify-center w-full h-full bg-black bg-opacity-60\"\r\n        >\r\n          {/* Placeholder UI for the upload modal */}\r\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700 p-6\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n              Upload Your Audio File\r\n            </h3>\r\n\r\n            <input\r\n              classname=\"my-5 block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"\r\n              id=\"file_input\"\r\n              type=\"file\"\r\n              onChange={(e) => { setFile(e.target.files[0]) }}\r\n            />\r\n\r\n            {/* Your upload file UI components can go here */}\r\n            <button\r\n              onClick={handleCloseUpload}\r\n              className=\"text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800\"\r\n            >\r\n              Close\r\n            </button>\r\n\r\n            <button\r\n              onClick={handleUploadFile}\r\n              className=\"ml-3 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\"\r\n            >\r\n              Upload\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\Modal.jsx",["388","389","390","391"],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\api\\api.js",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\AddDoctorModal.jsx",["392"],[],"import React, { useEffect, useState } from 'react';\r\nimport { fetchDoctorById, addDoctorToGroup, updateDoctorById} from '../../api/api';\r\n\r\nconst AddDoctorModal = ({   isAdded, setIsAdded , isModalOpen, setIsModalOpen, updateDoctor, currentGroup}) => {\r\n  const [doctorDetails, setDoctorDetails] = useState({\r\n    clinicAddress: '',\r\n    phone: '',\r\n    city: '',\r\n    name: '',\r\n    designation: '',\r\n    hospital: '',\r\n    email: '',\r\n  });\r\n\r\n \r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setDoctorDetails((prevDetails) => ({\r\n      ...prevDetails,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\nconst handleUpdate = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    const response = await updateDoctorById(currentGroup, updateDoctor, doctorDetails);\r\n    console.log(response);\r\n    setIsAdded('Success: Doctor updated Successfully');\r\n    setDoctorDetails({\r\n      clinicAddress: '',\r\n      phone: '',\r\n      city: '',\r\n      name: '',\r\n      designation: '',\r\n      hospital: '',\r\n      email: '',\r\n    });\r\n  } catch (error) {\r\n    setIsAdded('Error: Unable to update doctor');\r\n    console.log(error);\r\n  }\r\n  setIsModalOpen();\r\n};\r\nconst handleCancel = () => {\r\n  setDoctorDetails({\r\n    clinicAddress: '',\r\n    phone: '',\r\n    city: '',\r\n    name: '',\r\n    designation: '',\r\n    hospital: '',\r\n    email: '',\r\n  });\r\n  setIsModalOpen();\r\n}\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    await addDoctorToGroup(currentGroup, doctorDetails);\r\n    setIsAdded('Success: Doctor Created Successfully');\r\n    setDoctorDetails({\r\n      clinicAddress: '',\r\n      phone: '',\r\n      city: '',\r\n      name: '',\r\n      designation: '',\r\n      hospital: '',\r\n      email: '',\r\n    });\r\n  } catch (error) {\r\n    setIsAdded('Error: Unable to create doctor');\r\n    console.log(error);\r\n  }\r\n  setIsModalOpen();\r\n};\r\n\r\n// const handleSubmit =  (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     console.log('isAdded prop inside AddDoctorModal:', isAdded);\r\n//   console.log('setIsAdded prop inside AddDoctorModal:', setIsAdded);\r\n//       // try{\r\n//       //   const response  = await addDoctorToGroup(currentGroup, doctorDetails );\r\n//       //   setIsAdded('Success: Group Created Successfully');\r\n//       //   console.log(response)\r\n//       //   setDoctorDetails({\r\n//       //     clinicAddress: '',\r\n//       //     phone: '',\r\n//       //     city: '',\r\n//       //     name: '',\r\n//       //     designation: '',\r\n//       //     hospital: '',\r\n//       //     email: '',\r\n//       //   });\r\n//       // }catch(error){\r\n//       //   console.log(error);\r\n//       // }\r\n//       addDoctorToGroup(currentGroup, doctorDetails )\r\n//           .then((response) => {\r\n//             // setIsAdded('Success: Doctor added Successfully');\r\n//             setDoctorDetails({\r\n//               clinicAddress: '',\r\n//               phone: '',\r\n//               city: '',\r\n//               name: '',\r\n//               designation: '',\r\n//               hospital: '',\r\n//               email: '',\r\n//             });\r\n//             setIsModalOpen();\r\n//           })\r\n//           .catch((error) => {\r\n//             // setIsAdded('Error: Unable to add doctor');\r\n//             console.error('Error creating group:', error);\r\n//           });\r\n    \r\n//   };\r\n\r\n  useEffect(() => {\r\n    const fetchDoctor = async () => {\r\n      try {\r\n        const response = await fetchDoctorById(updateDoctor, currentGroup);\r\n          // console.log('RESPONSE DETAILS:::::::',updateDoctor,response)  \r\n          setDoctorDetails({\r\n            clinicAddress: response.doctor.doctorDetails.clinicAddress,\r\n            phone: response.doctor.doctorDetails.phone,\r\n            city: response.doctor.doctorDetails.city,\r\n            name: response.doctor.doctorDetails.name,\r\n            designation: response.doctor.doctorDetails.designation,\r\n            hospital: response.doctor.doctorDetails.hospital,\r\n            email: response.doctor.doctorDetails.email,\r\n          })\r\n            // console.log(response.data.groupDetails)\r\n          }catch(error) \r\n          {\r\n          console.error('Error fetching group details:', error);\r\n          };\r\n    }\r\n\r\n\r\n    if(isModalOpen){\r\n      if(updateDoctor){\r\n        fetchDoctor();\r\n      }\r\n    }\r\n    \r\n  },[isModalOpen])\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 flex items-center justify-center z-50 ${\r\n        isModalOpen ? 'visible' : 'invisible'\r\n      }`}\r\n    >\r\n      <div className=\"modal-container bg-white rounded p-20 w-7/12 shadow-2xl\">\r\n        <div className=\"modal-content\">\r\n          <h2 className=\"text-2xl mb-4\">Add Doctor</h2>\r\n          <form onSubmit={updateDoctor ? handleUpdate: handleSubmit}>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-2\" htmlFor=\"name\">\r\n                Name:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={doctorDetails.name}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-2\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-4 flex\">\r\n              <div className='w-6/12 mr-5'>\r\n              <label className=\"block mb-2\" htmlFor=\"designation\">\r\n                Designation:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"designation\"\r\n                name=\"designation\"\r\n                value={doctorDetails.designation}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-2\"\r\n                required\r\n              />\r\n              </div>\r\n              <div className='w-6/12'>\r\n              <label className=\"block mb-2\" htmlFor=\"hospital\">\r\n                Hospital:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"hospital\"\r\n                name=\"hospital\"\r\n                value={doctorDetails.hospital}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-2\"\r\n                required\r\n              />\r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-2\" htmlFor=\"clinicAddress\">\r\n                Clinic Address:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"clinicAddress\"\r\n                name=\"clinicAddress\"\r\n                value={doctorDetails.clinicAddress}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-2\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-4 flex\">\r\n            <div className='w-6/12 mr-5'>\r\n              <label className=\"block mb-2\" htmlFor=\"city\">\r\n                  City:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"city\"\r\n                  name=\"city\"\r\n                  value={doctorDetails.city}\r\n                  onChange={handleChange}\r\n                  className=\"w-full border rounded p-2\"\r\n                  required\r\n                />\r\n            </div>\r\n            <div className='w-6/12'>\r\n              <label className=\"block mb-2\" htmlFor=\"phone\">\r\n                  Phone:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"phone\"\r\n                  name=\"phone\"\r\n                  value={doctorDetails.phone}\r\n                  onChange={handleChange}\r\n                  className=\"w-full border rounded p-2\"\r\n                  required\r\n                />\r\n            </div>\r\n              \r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block mb-2\" htmlFor=\"email\">\r\n                Email:\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={doctorDetails.email}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded p-2\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex justify-end mt-10\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n              >\r\n                Save\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"ml-2 bg-gray-300 px-4 py-2 rounded\"\r\n                onClick={handleCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddDoctorModal;\r\n","C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\AddDoctor.jsx",[],[],"C:\\laragon\\www\\doctor-manager\\sales\\src\\components\\misc\\DeleteModal.jsx",[],[],{"ruleId":"393","severity":1,"message":"394","line":4,"column":8,"nodeType":"395","messageId":"396","endLine":4,"endColumn":19},{"ruleId":"393","severity":1,"message":"397","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":12},{"ruleId":"398","severity":1,"message":"399","line":51,"column":157,"nodeType":"400","messageId":"401","endLine":51,"endColumn":177},{"ruleId":"393","severity":1,"message":"402","line":22,"column":9,"nodeType":"395","messageId":"396","endLine":22,"endColumn":20},{"ruleId":"403","severity":1,"message":"404","line":37,"column":30,"nodeType":"405","messageId":"406","endLine":37,"endColumn":32},{"ruleId":"407","severity":1,"message":"408","line":50,"column":11,"nodeType":"409","endLine":50,"endColumn":51},{"ruleId":"393","severity":1,"message":"410","line":7,"column":8,"nodeType":"395","messageId":"396","endLine":7,"endColumn":20},{"ruleId":"403","severity":1,"message":"404","line":47,"column":20,"nodeType":"405","messageId":"406","endLine":47,"endColumn":22},{"ruleId":"393","severity":1,"message":"411","line":9,"column":13,"nodeType":"395","messageId":"396","endLine":9,"endColumn":15},{"ruleId":"403","severity":1,"message":"404","line":37,"column":24,"nodeType":"405","messageId":"406","endLine":37,"endColumn":26},{"ruleId":"407","severity":1,"message":"408","line":116,"column":17,"nodeType":"409","endLine":116,"endColumn":45},{"ruleId":"407","severity":1,"message":"408","line":122,"column":17,"nodeType":"409","endLine":122,"endColumn":51},{"ruleId":"407","severity":1,"message":"408","line":6,"column":18,"nodeType":"409","endLine":6,"endColumn":62},{"ruleId":"393","severity":1,"message":"412","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":26},{"ruleId":"393","severity":1,"message":"413","line":16,"column":17,"nodeType":"395","messageId":"396","endLine":16,"endColumn":28},{"ruleId":"393","severity":1,"message":"414","line":17,"column":10,"nodeType":"395","messageId":"396","endLine":17,"endColumn":23},{"ruleId":"393","severity":1,"message":"415","line":18,"column":10,"nodeType":"395","messageId":"396","endLine":18,"endColumn":25},{"ruleId":"393","severity":1,"message":"416","line":18,"column":27,"nodeType":"395","messageId":"396","endLine":18,"endColumn":45},{"ruleId":"393","severity":1,"message":"417","line":19,"column":24,"nodeType":"395","messageId":"396","endLine":19,"endColumn":39},{"ruleId":"418","severity":1,"message":"419","line":44,"column":6,"nodeType":"420","endLine":44,"endColumn":8,"suggestions":"421"},{"ruleId":"418","severity":1,"message":"422","line":87,"column":6,"nodeType":"420","endLine":87,"endColumn":8,"suggestions":"423"},{"ruleId":"418","severity":1,"message":"424","line":116,"column":6,"nodeType":"420","endLine":116,"endColumn":8,"suggestions":"425"},{"ruleId":"418","severity":1,"message":"426","line":136,"column":6,"nodeType":"420","endLine":136,"endColumn":13,"suggestions":"427"},{"ruleId":"393","severity":1,"message":"428","line":140,"column":12,"nodeType":"395","messageId":"396","endLine":140,"endColumn":36},{"ruleId":"393","severity":1,"message":"429","line":264,"column":11,"nodeType":"395","messageId":"396","endLine":264,"endColumn":29},{"ruleId":"407","severity":1,"message":"408","line":401,"column":26,"nodeType":"409","endLine":401,"endColumn":100},{"ruleId":"407","severity":1,"message":"408","line":418,"column":26,"nodeType":"409","endLine":418,"endColumn":100},{"ruleId":"393","severity":1,"message":"430","line":2,"column":8,"nodeType":"395","messageId":"396","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"432","line":54,"column":19,"nodeType":"409","endLine":58,"endColumn":21},{"ruleId":"407","severity":1,"message":"408","line":71,"column":19,"nodeType":"409","endLine":71,"endColumn":47},{"ruleId":"393","severity":1,"message":"433","line":12,"column":23,"nodeType":"395","messageId":"396","endLine":12,"endColumn":37},{"ruleId":"403","severity":1,"message":"404","line":32,"column":30,"nodeType":"405","messageId":"406","endLine":32,"endColumn":32},{"ruleId":"434","severity":1,"message":"435","line":34,"column":43,"nodeType":"436","messageId":"437","endLine":34,"endColumn":45},{"ruleId":"418","severity":1,"message":"438","line":64,"column":6,"nodeType":"420","endLine":64,"endColumn":17,"suggestions":"439"},{"ruleId":"418","severity":1,"message":"440","line":76,"column":6,"nodeType":"420","endLine":76,"endColumn":33,"suggestions":"441"},{"ruleId":"431","severity":1,"message":"432","line":163,"column":21,"nodeType":"409","endLine":167,"endColumn":23},{"ruleId":"407","severity":1,"message":"408","line":183,"column":21,"nodeType":"409","endLine":190,"endColumn":23},{"ruleId":"393","severity":1,"message":"394","line":3,"column":12,"nodeType":"395","messageId":"396","endLine":3,"endColumn":23},{"ruleId":"393","severity":1,"message":"442","line":10,"column":18,"nodeType":"395","messageId":"396","endLine":10,"endColumn":25},{"ruleId":"393","severity":1,"message":"443","line":11,"column":12,"nodeType":"395","messageId":"396","endLine":11,"endColumn":20},{"ruleId":"393","severity":1,"message":"444","line":11,"column":22,"nodeType":"395","messageId":"396","endLine":11,"endColumn":33},{"ruleId":"393","severity":1,"message":"445","line":13,"column":11,"nodeType":"395","messageId":"396","endLine":13,"endColumn":24},{"ruleId":"393","severity":1,"message":"446","line":18,"column":11,"nodeType":"395","messageId":"396","endLine":18,"endColumn":28},{"ruleId":"393","severity":1,"message":"447","line":78,"column":12,"nodeType":"395","messageId":"396","endLine":78,"endColumn":27},{"ruleId":"393","severity":1,"message":"448","line":78,"column":29,"nodeType":"395","messageId":"396","endLine":78,"endColumn":47},{"ruleId":"403","severity":1,"message":"404","line":250,"column":42,"nodeType":"405","messageId":"406","endLine":250,"endColumn":44},{"ruleId":"393","severity":1,"message":"449","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":13},{"ruleId":"393","severity":1,"message":"450","line":9,"column":7,"nodeType":"395","messageId":"396","endLine":9,"endColumn":13},{"ruleId":"393","severity":1,"message":"451","line":13,"column":22,"nodeType":"395","messageId":"396","endLine":13,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":109,"column":49,"nodeType":"409","endLine":109,"endColumn":130},{"ruleId":"407","severity":1,"message":"408","line":110,"column":49,"nodeType":"409","endLine":110,"endColumn":136},{"ruleId":"393","severity":1,"message":"452","line":5,"column":8,"nodeType":"395","messageId":"396","endLine":5,"endColumn":14},{"ruleId":"393","severity":1,"message":"453","line":12,"column":10,"nodeType":"395","messageId":"396","endLine":12,"endColumn":24},{"ruleId":"393","severity":1,"message":"454","line":12,"column":26,"nodeType":"395","messageId":"396","endLine":12,"endColumn":31},{"ruleId":"393","severity":1,"message":"412","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":26},{"ruleId":"393","severity":1,"message":"449","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":13},{"ruleId":"393","severity":1,"message":"450","line":9,"column":7,"nodeType":"395","messageId":"396","endLine":9,"endColumn":13},{"ruleId":"393","severity":1,"message":"451","line":13,"column":22,"nodeType":"395","messageId":"396","endLine":13,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":99,"column":49,"nodeType":"409","endLine":99,"endColumn":130},{"ruleId":"407","severity":1,"message":"408","line":100,"column":49,"nodeType":"409","endLine":100,"endColumn":136},{"ruleId":"393","severity":1,"message":"397","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":12},{"ruleId":"393","severity":1,"message":"402","line":22,"column":9,"nodeType":"395","messageId":"396","endLine":22,"endColumn":20},{"ruleId":"403","severity":1,"message":"404","line":37,"column":30,"nodeType":"405","messageId":"406","endLine":37,"endColumn":32},{"ruleId":"407","severity":1,"message":"408","line":50,"column":11,"nodeType":"409","endLine":50,"endColumn":51},{"ruleId":"407","severity":1,"message":"408","line":6,"column":18,"nodeType":"409","endLine":6,"endColumn":62},{"ruleId":"393","severity":1,"message":"410","line":7,"column":8,"nodeType":"395","messageId":"396","endLine":7,"endColumn":20},{"ruleId":"393","severity":1,"message":"455","line":12,"column":10,"nodeType":"395","messageId":"396","endLine":12,"endColumn":17},{"ruleId":"393","severity":1,"message":"456","line":12,"column":19,"nodeType":"395","messageId":"396","endLine":12,"endColumn":29},{"ruleId":"393","severity":1,"message":"457","line":14,"column":20,"nodeType":"395","messageId":"396","endLine":14,"endColumn":31},{"ruleId":"393","severity":1,"message":"458","line":15,"column":18,"nodeType":"395","messageId":"396","endLine":15,"endColumn":27},{"ruleId":"393","severity":1,"message":"459","line":20,"column":10,"nodeType":"395","messageId":"396","endLine":20,"endColumn":25},{"ruleId":"403","severity":1,"message":"404","line":49,"column":20,"nodeType":"405","messageId":"406","endLine":49,"endColumn":22},{"ruleId":"393","severity":1,"message":"412","line":1,"column":27,"nodeType":"395","messageId":"396","endLine":1,"endColumn":36},{"ruleId":"393","severity":1,"message":"449","line":4,"column":8,"nodeType":"395","messageId":"396","endLine":4,"endColumn":13},{"ruleId":"393","severity":1,"message":"450","line":5,"column":7,"nodeType":"395","messageId":"396","endLine":5,"endColumn":13},{"ruleId":"393","severity":1,"message":"411","line":9,"column":13,"nodeType":"395","messageId":"396","endLine":9,"endColumn":15},{"ruleId":"398","severity":1,"message":"399","line":51,"column":157,"nodeType":"400","messageId":"401","endLine":51,"endColumn":177},{"ruleId":"393","severity":1,"message":"460","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":21},{"ruleId":"393","severity":1,"message":"461","line":2,"column":8,"nodeType":"395","messageId":"396","endLine":2,"endColumn":18},{"ruleId":"393","severity":1,"message":"462","line":18,"column":10,"nodeType":"395","messageId":"396","endLine":18,"endColumn":16},{"ruleId":"393","severity":1,"message":"463","line":18,"column":18,"nodeType":"395","messageId":"396","endLine":18,"endColumn":27},{"ruleId":"393","severity":1,"message":"417","line":19,"column":24,"nodeType":"395","messageId":"396","endLine":19,"endColumn":39},{"ruleId":"418","severity":1,"message":"464","line":84,"column":5,"nodeType":"420","endLine":84,"endColumn":7,"suggestions":"465"},{"ruleId":"418","severity":1,"message":"466","line":99,"column":6,"nodeType":"420","endLine":99,"endColumn":19,"suggestions":"467"},{"ruleId":"393","severity":1,"message":"468","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"418","severity":1,"message":"469","line":84,"column":5,"nodeType":"420","endLine":84,"endColumn":20,"suggestions":"470"},{"ruleId":"403","severity":1,"message":"404","line":37,"column":24,"nodeType":"405","messageId":"406","endLine":37,"endColumn":26},{"ruleId":"407","severity":1,"message":"408","line":116,"column":17,"nodeType":"409","endLine":116,"endColumn":45},{"ruleId":"407","severity":1,"message":"408","line":122,"column":17,"nodeType":"409","endLine":122,"endColumn":51},{"ruleId":"393","severity":1,"message":"471","line":1,"column":21,"nodeType":"395","messageId":"396","endLine":1,"endColumn":27},{"ruleId":"393","severity":1,"message":"472","line":11,"column":16,"nodeType":"395","messageId":"396","endLine":11,"endColumn":28},{"ruleId":"393","severity":1,"message":"473","line":11,"column":30,"nodeType":"395","messageId":"396","endLine":11,"endColumn":45},{"ruleId":"418","severity":1,"message":"474","line":28,"column":14,"nodeType":"420","endLine":28,"endColumn":27,"suggestions":"475"},{"ruleId":"418","severity":1,"message":"476","line":150,"column":5,"nodeType":"420","endLine":150,"endColumn":18,"suggestions":"477"},"no-unused-vars","'AudioPlayer' is defined but never used.","Identifier","unusedVar","'Main' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'lastSegment' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'GroupDetails' is defined but never used.","'id' is assigned a value but never used.","'useEffect' is defined but never used.","'setAllChats' is assigned a value but never used.","'chatWithPhone' is assigned a value but never used.","'transformedData' is assigned a value but never used.","'setTransfromedData' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["478"],"React Hook useEffect has a missing dependency: 'setAllGroups'. Either include it or remove the dependency array. If 'setAllGroups' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["479"],"React Hook useEffect has missing dependencies: 'active' and 'firstData'. Either include them or remove the dependency array.",["480"],"React Hook useEffect has a missing dependency: 'updatedChats'. Either include it or remove the dependency array.",["481"],"'divideArrayIntoSubarrays' is defined but never used.","'newPhoneNumberData' is assigned a value but never used.","'Chat' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'setCurrentChat' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'id', 'setGroup', and 'setTransfromedData'. Either include them or remove the dependency array. If 'setGroup' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["482"],"React Hook useEffect has a missing dependency: 'setFilterData'. Either include it or remove the dependency array. If 'setFilterData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["483"],"'setChat' is assigned a value but never used.","'userChat' is assigned a value but never used.","'setUserChat' is assigned a value but never used.","'handleHomeNav' is assigned a value but never used.","'handlePlayMessage' is assigned a value but never used.","'selectedMessage' is assigned a value but never used.","'setSelectedMessage' is assigned a value but never used.","'axios' is defined but never used.","'apiURL' is assigned a value but never used.","'setSettings' is assigned a value but never used.","'Speech' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'toggler' is assigned a value but never used.","'setToggler' is assigned a value but never used.","'setFromDate' is assigned a value but never used.","'setToDate' is assigned a value but never used.","'GroupAllDoctors' is assigned a value but never used.","'createGroup' is defined but never used.","'DatePicker' is defined but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isAdded'. Either include it or remove the dependency array.",["484"],"React Hook useEffect has missing dependencies: 'setDoctors' and 'setFilterData'. Either include them or remove the dependency array. If 'setDoctors' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["485"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'currDoctor.id', 'currDoctor.name', and 'handleDeleteDoctor'. Either include them or remove the dependency array.",["486"],"'useRef' is defined but never used.","'groupDetails' is assigned a value but never used.","'setGroupDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isModalOpen' and 'setUpdateGroup'. Either include them or remove the dependency array. If 'setUpdateGroup' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["487"],"React Hook useEffect has missing dependencies: 'currentGroup' and 'updateDoctor'. Either include them or remove the dependency array.",["488"],{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},"Update the dependencies array to be: [id]",{"range":"511","text":"512"},"Update the dependencies array to be: [setAllGroups]",{"range":"513","text":"514"},"Update the dependencies array to be: [active, firstData]",{"range":"515","text":"516"},"Update the dependencies array to be: [chats, updatedChats]",{"range":"517","text":"518"},"Update the dependencies array to be: [allGroups, id, setGroup, setTransfromedData]",{"range":"519","text":"520"},"Update the dependencies array to be: [toggler, group, allGroups, setFilterData]",{"range":"521","text":"522"},"Update the dependencies array to be: [isAdded]",{"range":"523","text":"524"},"Update the dependencies array to be: [id, isAdded, setDoctors, setFilterData]",{"range":"525","text":"526"},"Update the dependencies array to be: [confirmDelete, currDoctor.id, currDoctor.name, handleDeleteDoctor]",{"range":"527","text":"528"},"Update the dependencies array to be: [isModalOpen, setUpdateGroup, updateGroup]",{"range":"529","text":"530"},"Update the dependencies array to be: [currentGroup, isModalOpen, updateDoctor]",{"range":"531","text":"532"},[1601,1603],"[id]",[2488,2490],"[setAllGroups]",[3241,3243],"[active, firstData]",[3840,3847],"[chats, updatedChats]",[2049,2060],"[allGroups, id, setGroup, setTransfromedData]",[2327,2354],"[toggler, group, allGroups, setFilterData]",[2412,2414],"[isAdded]",[2859,2872],"[id, isAdded, setDoctors, setFilterData]",[2502,2517],"[confirmDelete, currDoctor.id, currDoctor.name, handleDeleteDoctor]",[1161,1174],"[isModalOpen, setUpdateGroup, updateGroup]",[4295,4308],"[currentGroup, isModalOpen, updateDoctor]"]