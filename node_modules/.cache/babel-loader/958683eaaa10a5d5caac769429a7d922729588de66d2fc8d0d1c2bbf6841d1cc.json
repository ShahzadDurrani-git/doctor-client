{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = 'http://localhost:9000'; // Update with your server URL\n\nconst api = axios.create({\n  baseURL: apiUrl,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const getDoctorsForGroup = async groupId => {\n  try {\n    const response = await api.get(`/groups/${groupId}/doctors`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchDoctorById = async (doctorId, groupId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/doctors`, {\n      params: {\n        doctorId,\n        groupId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching doctor:', error);\n  }\n};\nexport const addDoctorToGroup = async (groupId, doctorData) => {\n  try {\n    const response = await api.post(`/groups/${groupId}/doctors`, doctorData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getAllGroups = async () => {\n  try {\n    const response = await api.get('/groups');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getGroupById = async groupId => {\n  try {\n    const response = await api.get(`/groups/${groupId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateDoctor = async (doctorId, updatedDoctorData) => {\n  try {\n    const response = await api.put(`/doctors/${doctorId}`, updatedDoctorData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteDoctor = async doctorId => {\n  try {\n    const response = await api.delete(`/doctors/${doctorId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createGroup = async newGroupData => {\n  try {\n    const response = await api.post('/groups', newGroupData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateGroupData = async (groupId, updatedGroupData) => {\n  try {\n    const response = await api.put(`/groups/${groupId}`, updatedGroupData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteGroup = async groupId => {\n  try {\n    const response = await api.delete(`/groups/${groupId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const sendEmailToGroup = async (groupId, subject, message) => {\n  try {\n    const response = await api.post(`/groups/${groupId}/send-email`, {\n      subject,\n      message\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiUrl","api","create","baseURL","headers","getDoctorsForGroup","groupId","response","get","data","error","fetchDoctorById","doctorId","BASE_URL","params","Error","addDoctorToGroup","doctorData","post","getAllGroups","getGroupById","updateDoctor","updatedDoctorData","put","deleteDoctor","delete","createGroup","newGroupData","updateGroupData","updatedGroupData","deleteGroup","sendEmailToGroup","subject","message"],"sources":["C:/laragon/www/doctor-manager/sales/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiUrl = 'http://localhost:9000'; // Update with your server URL\r\n\r\nconst api = axios.create({\r\n  baseURL: apiUrl,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const getDoctorsForGroup = async (groupId) => {\r\n  try {\r\n    const response = await api.get(`/groups/${groupId}/doctors`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchDoctorById = async (doctorId, groupId) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/doctors`, {\r\n      params: {\r\n        doctorId,\r\n        groupId,\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Error fetching doctor:', error);\r\n  }\r\n};\r\n\r\nexport const addDoctorToGroup = async (groupId, doctorData) => {\r\n  try {\r\n    const response = await api.post(`/groups/${groupId}/doctors`, doctorData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllGroups = async () => {\r\n  try {\r\n    const response = await api.get('/groups');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getGroupById = async (groupId) => {\r\n  try {\r\n    const response = await api.get(`/groups/${groupId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateDoctor = async (doctorId, updatedDoctorData) => {\r\n  try {\r\n    const response = await api.put(`/doctors/${doctorId}`, updatedDoctorData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteDoctor = async (doctorId) => {\r\n  try {\r\n    const response = await api.delete(`/doctors/${doctorId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createGroup = async (newGroupData) => {\r\n  try {\r\n    const response = await api.post('/groups', newGroupData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateGroupData = async (groupId, updatedGroupData) => {\r\n  try {\r\n    const response = await api.put(`/groups/${groupId}`, updatedGroupData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteGroup = async (groupId) => {\r\n  try {\r\n    const response = await api.delete(`/groups/${groupId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const sendEmailToGroup = async (groupId, subject, message) => {\r\n  try {\r\n    const response = await api.post(`/groups/${groupId}/send-email`, { subject, message });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}