{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\doctor-manager\\\\sales\\\\src\\\\components\\\\misc\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { createGroup, getGroupById, updateGroupData } from '../../api/api'; // Import the API functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isAdded,\n  setIsAdded,\n  isModalOpen,\n  setIsModalOpen,\n  updateGroup,\n  setUpdateGroup\n}) => {\n  _s();\n  const [groupName, setGroupName] = useState('');\n  const [description, setDescription] = useState('');\n  const [groupDetails, setGroupDetails] = useState(null);\n  useEffect(() => {\n    if (isModalOpen) {\n      if (updateGroup) {\n        // Fetch group details by its ID\n        getGroupById(updateGroup).then(response => {\n          setGroupName(response.data.groupDetails.groupName);\n          setDescription(response.data.groupDetails.description);\n          // console.log(response.data.groupDetails)\n        }).catch(error => {\n          console.error('Error fetching group details:', error);\n        });\n      }\n    }\n  }, [updateGroup]);\n  const handleAddGroup = () => {\n    if (!groupName || !description) {\n      setIsAdded('Error: Group Name and Description cannot be empty');\n      return;\n    }\n    const data = {\n      \"groupName\": groupName,\n      \"description\": description\n    };\n    createGroup(data).then(response => {\n      setIsAdded('Success: Group Created Successfully');\n      setGroupName('');\n      closeModal();\n    }).catch(error => {\n      setIsAdded('Error: Unable to create the group');\n      console.error('Error creating group:', error);\n    });\n  };\n  const handleUpdateGroup = () => {\n    if (!groupName || !description) {\n      setIsAdded('Error: Group Name and Description cannot be empty');\n      return;\n    }\n    const data = {\n      groupName,\n      description\n    };\n\n    // Assuming you have an updateGroup function in your API\n    updateGroupData(updateGroup, data) // Replace `groupId` with the actual group ID\n    .then(response => {\n      setIsAdded('Success: Group Updated Successfully');\n      setGroupName('');\n      setDescription('');\n      setUpdateGroup('');\n      closeModal();\n    }).catch(error => {\n      setIsAdded('Error: Unable to update the group');\n      console.error('Error updating group:', error);\n    });\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal bg-white p-6 rounded w-5/12 shadow-2xl\",\n        style: {\n          margin: '0 auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-medium mb-5 text-lg\",\n            children: \"Enter Group Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block mb-2\",\n                children: \"Group Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: groupName,\n                className: \"w-full border rounded p-2\",\n                onChange: e => {\n                  setGroupName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                className: \"block mb-2\",\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"appearance-none w-full border rounded p-2 h-40\",\n                id: \"description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [!updateGroup ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdateGroup,\n              className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n              children: \"Update Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddGroup,\n              className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n              children: \"Save Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 145\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeModal,\n              className: \"ml-2 bg-gray-300 px-4 py-2 rounded\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Modal, \"eKx8oXbODRaGKHi7fMqOR1iFBUs=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useRef","useState","useEffect","createGroup","getGroupById","updateGroupData","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","isAdded","setIsAdded","isModalOpen","setIsModalOpen","updateGroup","setUpdateGroup","_s","groupName","setGroupName","description","setDescription","groupDetails","setGroupDetails","then","response","data","catch","error","console","handleAddGroup","closeModal","handleUpdateGroup","children","className","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","htmlFor","id","onClick","_c","$RefreshReg$"],"sources":["C:/laragon/www/doctor-manager/sales/src/components/misc/Modal.jsx"],"sourcesContent":["    import React, { useRef, useState, useEffect } from \"react\";\r\n    \r\nimport { createGroup, getGroupById, updateGroupData } from '../../api/api';  // Import the API functions\r\n\r\n\r\n    const Modal = ({ isAdded, setIsAdded, isModalOpen, setIsModalOpen, updateGroup, setUpdateGroup}) => {\r\n\r\n        const [groupName, setGroupName] = useState('');\r\n        const [description, setDescription] = useState('')\r\n        const [groupDetails, setGroupDetails] = useState(null);\r\n\r\n        useEffect(() => {\r\n            if(isModalOpen){\r\n              if (updateGroup) {\r\n              // Fetch group details by its ID\r\n              getGroupById(updateGroup)\r\n                .then((response) => {\r\n                    setGroupName(response.data.groupDetails.groupName)\r\n                    setDescription(response.data.groupDetails.description)\r\n                  // console.log(response.data.groupDetails)\r\n                })\r\n                .catch((error) => {\r\n                  console.error('Error fetching group details:', error);\r\n                });\r\n            }}\r\n          }, [updateGroup]);\r\n\r\n      const handleAddGroup = () => {\r\n        if (!groupName || !description) {\r\n          setIsAdded('Error: Group Name and Description cannot be empty');\r\n          return;\r\n        }\r\n        const data = {\r\n          \"groupName\": groupName,\r\n          \"description\": description\r\n        }\r\n        createGroup(data)\r\n          .then((response) => {\r\n            setIsAdded('Success: Group Created Successfully');\r\n            setGroupName('');\r\n            closeModal();\r\n          })\r\n          .catch((error) => {\r\n            setIsAdded('Error: Unable to create the group');\r\n            console.error('Error creating group:', error);\r\n          });\r\n      };\r\n\r\n\r\n      const handleUpdateGroup = () => {\r\n        if (!groupName || !description) {\r\n          setIsAdded('Error: Group Name and Description cannot be empty');\r\n          return;\r\n        }\r\n      \r\n        const data = {\r\n          groupName,\r\n          description,\r\n        };\r\n      \r\n        // Assuming you have an updateGroup function in your API\r\n        updateGroupData(updateGroup, data) // Replace `groupId` with the actual group ID\r\n          .then((response) => {\r\n            setIsAdded('Success: Group Updated Successfully');\r\n            setGroupName('');\r\n            setDescription('');\r\n            setUpdateGroup('')\r\n            closeModal();\r\n          })\r\n          .catch((error) => {\r\n            setIsAdded('Error: Unable to update the group');\r\n            console.error('Error updating group:', error);\r\n          });\r\n      };\r\n      \r\n\r\n      const closeModal = () => {\r\n        setIsModalOpen(false);\r\n      };\r\n  \r\n\r\n    return (\r\n        <>\r\n        {isModalOpen && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center z-10\">\r\n          <div className=\"modal bg-white p-6 rounded w-5/12 shadow-2xl\" style={{ margin: '0 auto' }}>\r\n            \r\n            <div className=\"modal-content\">\r\n              <h2 className=\"font-medium mb-5 text-lg\">Enter Group Details</h2>\r\n              <div className=\"group-details\">\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-2\">Group Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={groupName}\r\n                  className=\"w-full border rounded p-2\"\r\n                  onChange={(e) => {\r\n                    setGroupName(e.target.value);\r\n                  }}\r\n                />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n        <label htmlFor=\"description\" className=\"block mb-2\">\r\n          Description: \r\n        </label>\r\n        <textarea\r\n          className=\"appearance-none w-full border rounded p-2 h-40\"\r\n          id=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n              </div>\r\n              <div className=\"modal-actions\">\r\n                {!updateGroup? <button onClick={handleUpdateGroup} className=\"bg-blue-500 text-white px-4 py-2 rounded\">Update Group</button> : <button onClick={handleAddGroup} className=\"bg-blue-500 text-white px-4 py-2 rounded\">Save Group</button>}\r\n                {/* <button onClick={handleAddGroup}>Save Group</button> */}\r\n                <button onClick={closeModal} className=\"ml-2 bg-gray-300 px-4 py-2 rounded\">Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n        </>\r\n    );\r\n    };\r\n\r\n    export default Modal;\r\n"],"mappings":";;AAAI,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE9D,SAASC,WAAW,EAAEC,YAAY,EAAEC,eAAe,QAAQ,eAAe,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzE,MAAMC,KAAK,GAAGA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC,WAAW;EAAEC,cAAc;EAAEC,WAAW;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAEhG,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,IAAGW,WAAW,EAAC;MACb,IAAIE,WAAW,EAAE;QACjB;QACAX,YAAY,CAACW,WAAW,CAAC,CACtBS,IAAI,CAAEC,QAAQ,IAAK;UAChBN,YAAY,CAACM,QAAQ,CAACC,IAAI,CAACJ,YAAY,CAACJ,SAAS,CAAC;UAClDG,cAAc,CAACI,QAAQ,CAACC,IAAI,CAACJ,YAAY,CAACF,WAAW,CAAC;UACxD;QACF,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACvD,CAAC,CAAC;MACN;IAAC;EACH,CAAC,EAAE,CAACb,WAAW,CAAC,CAAC;EAErB,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACZ,SAAS,IAAI,CAACE,WAAW,EAAE;MAC9BR,UAAU,CAAC,mDAAmD,CAAC;MAC/D;IACF;IACA,MAAMc,IAAI,GAAG;MACX,WAAW,EAAER,SAAS;MACtB,aAAa,EAAEE;IACjB,CAAC;IACDjB,WAAW,CAACuB,IAAI,CAAC,CACdF,IAAI,CAAEC,QAAQ,IAAK;MAClBb,UAAU,CAAC,qCAAqC,CAAC;MACjDO,YAAY,CAAC,EAAE,CAAC;MAChBY,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,CACDJ,KAAK,CAAEC,KAAK,IAAK;MAChBhB,UAAU,CAAC,mCAAmC,CAAC;MAC/CiB,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAGD,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACd,SAAS,IAAI,CAACE,WAAW,EAAE;MAC9BR,UAAU,CAAC,mDAAmD,CAAC;MAC/D;IACF;IAEA,MAAMc,IAAI,GAAG;MACXR,SAAS;MACTE;IACF,CAAC;;IAED;IACAf,eAAe,CAACU,WAAW,EAAEW,IAAI,CAAC,CAAC;IAAA,CAChCF,IAAI,CAAEC,QAAQ,IAAK;MAClBb,UAAU,CAAC,qCAAqC,CAAC;MACjDO,YAAY,CAAC,EAAE,CAAC;MAChBE,cAAc,CAAC,EAAE,CAAC;MAClBL,cAAc,CAAC,EAAE,CAAC;MAClBe,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,CACDJ,KAAK,CAAEC,KAAK,IAAK;MAChBhB,UAAU,CAAC,mCAAmC,CAAC;MAC/CiB,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAGD,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBjB,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAGH,oBACIP,OAAA,CAAAE,SAAA;IAAAwB,QAAA,EACCpB,WAAW,iBACZN,OAAA;MAAK2B,SAAS,EAAC,qDAAqD;MAAAD,QAAA,eAClE1B,OAAA;QAAK2B,SAAS,EAAC,8CAA8C;QAACC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAS,CAAE;QAAAH,QAAA,eAExF1B,OAAA;UAAK2B,SAAS,EAAC,eAAe;UAAAD,QAAA,gBAC5B1B,OAAA;YAAI2B,SAAS,EAAC,0BAA0B;YAAAD,QAAA,EAAC;UAAmB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjEjC,OAAA;YAAK2B,SAAS,EAAC,eAAe;YAAAD,QAAA,gBAC9B1B,OAAA;cAAK2B,SAAS,EAAC,MAAM;cAAAD,QAAA,gBACnB1B,OAAA;gBAAO2B,SAAS,EAAC,YAAY;gBAAAD,QAAA,EAAC;cAAW;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjDjC,OAAA;gBACEkC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAExB,SAAU;gBACjBgB,SAAS,EAAC,2BAA2B;gBACrCS,QAAQ,EAAGC,CAAC,IAAK;kBACfzB,YAAY,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;gBAC9B;cAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACNjC,OAAA;cAAK2B,SAAS,EAAC,MAAM;cAAAD,QAAA,gBAC7B1B,OAAA;gBAAOuC,OAAO,EAAC,aAAa;gBAACZ,SAAS,EAAC,YAAY;gBAAAD,QAAA,EAAC;cAEpD;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRjC,OAAA;gBACE2B,SAAS,EAAC,gDAAgD;gBAC1Da,EAAE,EAAC,aAAa;gBAChBL,KAAK,EAAEtB,WAAY;gBACnBuB,QAAQ,EAAGC,CAAC,IAAKvB,cAAc,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;cAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,eACNjC,OAAA;YAAK2B,SAAS,EAAC,eAAe;YAAAD,QAAA,GAC3B,CAAClB,WAAW,gBAAER,OAAA;cAAQyC,OAAO,EAAEhB,iBAAkB;cAACE,SAAS,EAAC,0CAA0C;cAAAD,QAAA,EAAC;YAAY;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAAGjC,OAAA;cAAQyC,OAAO,EAAElB,cAAe;cAACI,SAAS,EAAC,0CAA0C;cAAAD,QAAA,EAAC;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAEzOjC,OAAA;cAAQyC,OAAO,EAAEjB,UAAW;cAACG,SAAS,EAAC,oCAAoC;cAAAD,QAAA,EAAC;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN,gBACG,CAAC;AAEP,CAAC;AAACvB,EAAA,CAvHIP,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AAyHX,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}