{"ast":null,"code":"import _toConsumableArray from\"C:/laragon/www/sales-automation/sales/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"C:/laragon/www/sales-automation/sales/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/laragon/www/sales-automation/sales/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/laragon/www/sales-automation/sales/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/laragon/www/sales-automation/sales/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import io from'socket.io-client';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SocketClient=/*#__PURE__*/function(_Component){_inherits(SocketClient,_Component);var _super=_createSuper(SocketClient);function SocketClient(){var _this;_classCallCheck(this,SocketClient);_this=_super.call(this);// Function to handle sending a new chat message\n_this.sendChatMessage=function(){var newMessage=_this.state.newMessage;// Emit the new message to the server\n_this.socket.emit('chat message',newMessage);// Clear the input field after sending\n_this.setState({newMessage:''});};_this.state={messages:[],newMessage:''// State to store the new message to send\n};return _this;}_createClass(SocketClient,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// Connect to the Socket.IO server\nthis.socket=io('http://16.163.178.109:9001');this.socket.on('connect',function(){console.log('Connected to Socket.IO server');});this.socket.on('chat message',function(message){// Update the state with received messages\n_this2.setState(function(prevState){return{messages:[].concat(_toConsumableArray(prevState.messages),[message])};});});this.socket.on('disconnect',function(){console.log('Disconnected from Socket.IO server');});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){// Disconnect the socket when the component unmounts\nthis.socket.disconnect();}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Socket.IO Client\"}),/*#__PURE__*/_jsx(\"ul\",{children:this.state.messages.map(function(message,index){return/*#__PURE__*/_jsx(\"li\",{children:message},index);})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message...\",value:this.state.newMessage,onChange:function onChange(e){return _this3.setState({newMessage:e.target.value});}}),/*#__PURE__*/_jsx(\"button\",{onClick:this.sendChatMessage,children:\"Send\"})]})]});}}]);return SocketClient;}(Component);export default SocketClient;","map":{"version":3,"names":["React","Component","io","jsx","_jsx","jsxs","_jsxs","SocketClient","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","sendChatMessage","newMessage","state","socket","emit","setState","messages","_createClass","key","value","componentDidMount","_this2","on","console","log","message","prevState","concat","_toConsumableArray","componentWillUnmount","disconnect","render","_this3","children","map","index","type","placeholder","onChange","e","target","onClick"],"sources":["C:/laragon/www/sales-automation/sales/src/socket-client.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nclass SocketClient extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messages: [],\r\n      newMessage: '', // State to store the new message to send\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Connect to the Socket.IO server\r\n    this.socket = io('http://16.163.178.109:9001');\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('Connected to Socket.IO server');\r\n    });\r\n\r\n    this.socket.on('chat message', (message) => {\r\n      // Update the state with received messages\r\n      this.setState((prevState) => ({\r\n        messages: [...prevState.messages, message],\r\n      }));\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      console.log('Disconnected from Socket.IO server');\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Disconnect the socket when the component unmounts\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  // Function to handle sending a new chat message\r\n  sendChatMessage = () => {\r\n    const { newMessage } = this.state;\r\n    // Emit the new message to the server\r\n    this.socket.emit('chat message', newMessage);\r\n    // Clear the input field after sending\r\n    this.setState({ newMessage: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Socket.IO Client</h1>\r\n        <ul>\r\n          {this.state.messages.map((message, index) => (\r\n            <li key={index}>{message}</li>\r\n          ))}\r\n        </ul>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your message...\"\r\n            value={this.state.newMessage}\r\n            onChange={(e) => this.setState({ newMessage: e.target.value })}\r\n          />\r\n          <button onClick={this.sendChatMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocketClient;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}