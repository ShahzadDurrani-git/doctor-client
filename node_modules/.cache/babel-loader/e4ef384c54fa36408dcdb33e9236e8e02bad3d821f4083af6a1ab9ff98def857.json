{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\doctor-manager\\\\sales\\\\src\\\\socket-client.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SocketClient extends Component {\n  constructor() {\n    super();\n    // Function to handle sending a new chat message\n    this.sendChatMessage = () => {\n      const {\n        newMessage\n      } = this.state;\n      // Emit the new message to the server\n      this.socket.emit('chat message', newMessage);\n      // Clear the input field after sending\n      this.setState({\n        newMessage: ''\n      });\n    };\n    this.state = {\n      messages: [],\n      newMessage: '' // State to store the new message to send\n    };\n  }\n\n  componentDidMount() {\n    // Connect to the Socket.IO server\n    this.socket = io('http://16.163.178.109:9001');\n    this.socket.on('connect', () => {\n      console.log('Connected to Socket.IO server');\n    });\n    this.socket.on('chat message', message => {\n      // Update the state with received messages\n      this.setState(prevState => ({\n        messages: [...prevState.messages, message]\n      }));\n    });\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from Socket.IO server');\n    });\n  }\n  componentWillUnmount() {\n    // Disconnect the socket when the component unmounts\n    this.socket.disconnect();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Socket.IO Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: this.state.newMessage,\n          onChange: e => this.setState({\n            newMessage: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.sendChatMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default SocketClient;","map":{"version":3,"names":["React","Component","io","jsxDEV","_jsxDEV","SocketClient","constructor","sendChatMessage","newMessage","state","socket","emit","setState","messages","componentDidMount","on","console","log","message","prevState","componentWillUnmount","disconnect","render","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/laragon/www/doctor-manager/sales/src/socket-client.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nclass SocketClient extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messages: [],\r\n      newMessage: '', // State to store the new message to send\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Connect to the Socket.IO server\r\n    this.socket = io('http://16.163.178.109:9001');\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('Connected to Socket.IO server');\r\n    });\r\n\r\n    this.socket.on('chat message', (message) => {\r\n      // Update the state with received messages\r\n      this.setState((prevState) => ({\r\n        messages: [...prevState.messages, message],\r\n      }));\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      console.log('Disconnected from Socket.IO server');\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Disconnect the socket when the component unmounts\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  // Function to handle sending a new chat message\r\n  sendChatMessage = () => {\r\n    const { newMessage } = this.state;\r\n    // Emit the new message to the server\r\n    this.socket.emit('chat message', newMessage);\r\n    // Clear the input field after sending\r\n    this.setState({ newMessage: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Socket.IO Client</h1>\r\n        <ul>\r\n          {this.state.messages.map((message, index) => (\r\n            <li key={index}>{message}</li>\r\n          ))}\r\n        </ul>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your message...\"\r\n            value={this.state.newMessage}\r\n            onChange={(e) => this.setState({ newMessage: e.target.value })}\r\n          />\r\n          <button onClick={this.sendChatMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocketClient;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}