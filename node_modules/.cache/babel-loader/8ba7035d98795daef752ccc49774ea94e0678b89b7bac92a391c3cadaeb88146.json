{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar DeltaInsertOp_1 = require(\"./../DeltaInsertOp\");\nvar array_1 = require(\"./../helpers/array\");\nvar group_types_1 = require(\"./group-types\");\nvar Grouper = function () {\n  function Grouper() {}\n  Grouper.pairOpsWithTheirBlock = function (ops) {\n    var result = [];\n    var canBeInBlock = function (op) {\n      return !(op.isJustNewline() || op.isCustomEmbedBlock() || op.isVideo() || op.isContainerBlock());\n    };\n    var isInlineData = function (op) {\n      return op.isInline();\n    };\n    var lastInd = ops.length - 1;\n    var opsSlice;\n    for (var i = lastInd; i >= 0; i--) {\n      var op = ops[i];\n      if (op.isVideo()) {\n        result.push(new group_types_1.VideoItem(op));\n      } else if (op.isCustomEmbedBlock()) {\n        result.push(new group_types_1.BlotBlock(op));\n      } else if (op.isContainerBlock()) {\n        opsSlice = array_1.sliceFromReverseWhile(ops, i - 1, canBeInBlock);\n        result.push(new group_types_1.BlockGroup(op, opsSlice.elements));\n        i = opsSlice.sliceStartsAt > -1 ? opsSlice.sliceStartsAt : i;\n      } else {\n        opsSlice = array_1.sliceFromReverseWhile(ops, i - 1, isInlineData);\n        result.push(new group_types_1.InlineGroup(opsSlice.elements.concat(op)));\n        i = opsSlice.sliceStartsAt > -1 ? opsSlice.sliceStartsAt : i;\n      }\n    }\n    result.reverse();\n    return result;\n  };\n  Grouper.groupConsecutiveSameStyleBlocks = function (groups, blocksOf) {\n    if (blocksOf === void 0) {\n      blocksOf = {\n        header: true,\n        codeBlocks: true,\n        blockquotes: true,\n        customBlocks: true\n      };\n    }\n    return array_1.groupConsecutiveElementsWhile(groups, function (g, gPrev) {\n      if (!(g instanceof group_types_1.BlockGroup) || !(gPrev instanceof group_types_1.BlockGroup)) {\n        return false;\n      }\n      return blocksOf.codeBlocks && Grouper.areBothCodeblocksWithSameLang(g, gPrev) || blocksOf.blockquotes && Grouper.areBothBlockquotesWithSameAdi(g, gPrev) || blocksOf.header && Grouper.areBothSameHeadersWithSameAdi(g, gPrev) || blocksOf.customBlocks && Grouper.areBothCustomBlockWithSameAttr(g, gPrev);\n    });\n  };\n  Grouper.reduceConsecutiveSameStyleBlocksToOne = function (groups) {\n    var newLineOp = DeltaInsertOp_1.DeltaInsertOp.createNewLineOp();\n    return groups.map(function (elm) {\n      if (!Array.isArray(elm)) {\n        if (elm instanceof group_types_1.BlockGroup && !elm.ops.length) {\n          elm.ops.push(newLineOp);\n        }\n        return elm;\n      }\n      var groupsLastInd = elm.length - 1;\n      elm[0].ops = array_1.flatten(elm.map(function (g, i) {\n        if (!g.ops.length) {\n          return [newLineOp];\n        }\n        return g.ops.concat(i < groupsLastInd ? [newLineOp] : []);\n      }));\n      return elm[0];\n    });\n  };\n  Grouper.areBothCodeblocksWithSameLang = function (g1, gOther) {\n    return g1.op.isCodeBlock() && gOther.op.isCodeBlock() && g1.op.hasSameLangAs(gOther.op);\n  };\n  Grouper.areBothSameHeadersWithSameAdi = function (g1, gOther) {\n    return g1.op.isSameHeaderAs(gOther.op) && g1.op.hasSameAdiAs(gOther.op);\n  };\n  Grouper.areBothBlockquotesWithSameAdi = function (g, gOther) {\n    return g.op.isBlockquote() && gOther.op.isBlockquote() && g.op.hasSameAdiAs(gOther.op);\n  };\n  Grouper.areBothCustomBlockWithSameAttr = function (g, gOther) {\n    return g.op.isCustomTextBlock() && gOther.op.isCustomTextBlock() && g.op.hasSameAttr(gOther.op);\n  };\n  return Grouper;\n}();\nexports.Grouper = Grouper;","map":{"version":3,"names":["Object","defineProperty","exports","value","DeltaInsertOp_1","require","array_1","group_types_1","Grouper","pairOpsWithTheirBlock","ops","result","canBeInBlock","op","isJustNewline","isCustomEmbedBlock","isVideo","isContainerBlock","isInlineData","isInline","lastInd","length","opsSlice","i","push","VideoItem","BlotBlock","sliceFromReverseWhile","BlockGroup","elements","sliceStartsAt","InlineGroup","concat","reverse","groupConsecutiveSameStyleBlocks","groups","blocksOf","header","codeBlocks","blockquotes","customBlocks","groupConsecutiveElementsWhile","g","gPrev","areBothCodeblocksWithSameLang","areBothBlockquotesWithSameAdi","areBothSameHeadersWithSameAdi","areBothCustomBlockWithSameAttr","reduceConsecutiveSameStyleBlocksToOne","newLineOp","DeltaInsertOp","createNewLineOp","map","elm","Array","isArray","groupsLastInd","flatten","g1","gOther","isCodeBlock","hasSameLangAs","isSameHeaderAs","hasSameAdiAs","isBlockquote","isCustomTextBlock","hasSameAttr"],"sources":["C:/laragon/www/doctor-manager/node_modules/quill-delta-to-html/dist/commonjs/grouper/Grouper.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DeltaInsertOp_1 = require(\"./../DeltaInsertOp\");\nvar array_1 = require(\"./../helpers/array\");\nvar group_types_1 = require(\"./group-types\");\nvar Grouper = (function () {\n    function Grouper() {\n    }\n    Grouper.pairOpsWithTheirBlock = function (ops) {\n        var result = [];\n        var canBeInBlock = function (op) {\n            return !(op.isJustNewline() ||\n                op.isCustomEmbedBlock() ||\n                op.isVideo() ||\n                op.isContainerBlock());\n        };\n        var isInlineData = function (op) { return op.isInline(); };\n        var lastInd = ops.length - 1;\n        var opsSlice;\n        for (var i = lastInd; i >= 0; i--) {\n            var op = ops[i];\n            if (op.isVideo()) {\n                result.push(new group_types_1.VideoItem(op));\n            }\n            else if (op.isCustomEmbedBlock()) {\n                result.push(new group_types_1.BlotBlock(op));\n            }\n            else if (op.isContainerBlock()) {\n                opsSlice = array_1.sliceFromReverseWhile(ops, i - 1, canBeInBlock);\n                result.push(new group_types_1.BlockGroup(op, opsSlice.elements));\n                i = opsSlice.sliceStartsAt > -1 ? opsSlice.sliceStartsAt : i;\n            }\n            else {\n                opsSlice = array_1.sliceFromReverseWhile(ops, i - 1, isInlineData);\n                result.push(new group_types_1.InlineGroup(opsSlice.elements.concat(op)));\n                i = opsSlice.sliceStartsAt > -1 ? opsSlice.sliceStartsAt : i;\n            }\n        }\n        result.reverse();\n        return result;\n    };\n    Grouper.groupConsecutiveSameStyleBlocks = function (groups, blocksOf) {\n        if (blocksOf === void 0) { blocksOf = {\n            header: true,\n            codeBlocks: true,\n            blockquotes: true,\n            customBlocks: true,\n        }; }\n        return array_1.groupConsecutiveElementsWhile(groups, function (g, gPrev) {\n            if (!(g instanceof group_types_1.BlockGroup) || !(gPrev instanceof group_types_1.BlockGroup)) {\n                return false;\n            }\n            return ((blocksOf.codeBlocks &&\n                Grouper.areBothCodeblocksWithSameLang(g, gPrev)) ||\n                (blocksOf.blockquotes &&\n                    Grouper.areBothBlockquotesWithSameAdi(g, gPrev)) ||\n                (blocksOf.header &&\n                    Grouper.areBothSameHeadersWithSameAdi(g, gPrev)) ||\n                (blocksOf.customBlocks &&\n                    Grouper.areBothCustomBlockWithSameAttr(g, gPrev)));\n        });\n    };\n    Grouper.reduceConsecutiveSameStyleBlocksToOne = function (groups) {\n        var newLineOp = DeltaInsertOp_1.DeltaInsertOp.createNewLineOp();\n        return groups.map(function (elm) {\n            if (!Array.isArray(elm)) {\n                if (elm instanceof group_types_1.BlockGroup && !elm.ops.length) {\n                    elm.ops.push(newLineOp);\n                }\n                return elm;\n            }\n            var groupsLastInd = elm.length - 1;\n            elm[0].ops = array_1.flatten(elm.map(function (g, i) {\n                if (!g.ops.length) {\n                    return [newLineOp];\n                }\n                return g.ops.concat(i < groupsLastInd ? [newLineOp] : []);\n            }));\n            return elm[0];\n        });\n    };\n    Grouper.areBothCodeblocksWithSameLang = function (g1, gOther) {\n        return (g1.op.isCodeBlock() &&\n            gOther.op.isCodeBlock() &&\n            g1.op.hasSameLangAs(gOther.op));\n    };\n    Grouper.areBothSameHeadersWithSameAdi = function (g1, gOther) {\n        return g1.op.isSameHeaderAs(gOther.op) && g1.op.hasSameAdiAs(gOther.op);\n    };\n    Grouper.areBothBlockquotesWithSameAdi = function (g, gOther) {\n        return (g.op.isBlockquote() &&\n            gOther.op.isBlockquote() &&\n            g.op.hasSameAdiAs(gOther.op));\n    };\n    Grouper.areBothCustomBlockWithSameAttr = function (g, gOther) {\n        return (g.op.isCustomTextBlock() &&\n            gOther.op.isCustomTextBlock() &&\n            g.op.hasSameAttr(gOther.op));\n    };\n    return Grouper;\n}());\nexports.Grouper = Grouper;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}