{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar group_types_1 = require(\"./group-types\");\nvar array_1 = require(\"./../helpers/array\");\nvar ListNester = function () {\n  function ListNester() {}\n  ListNester.prototype.nest = function (groups) {\n    var _this = this;\n    var listBlocked = this.convertListBlocksToListGroups(groups);\n    var groupedByListGroups = this.groupConsecutiveListGroups(listBlocked);\n    var nested = array_1.flatten(groupedByListGroups.map(function (group) {\n      if (!Array.isArray(group)) {\n        return group;\n      }\n      return _this.nestListSection(group);\n    }));\n    var groupRootLists = array_1.groupConsecutiveElementsWhile(nested, function (curr, prev) {\n      if (!(curr instanceof group_types_1.ListGroup && prev instanceof group_types_1.ListGroup)) {\n        return false;\n      }\n      return curr.items[0].item.op.isSameListAs(prev.items[0].item.op);\n    });\n    return groupRootLists.map(function (v) {\n      if (!Array.isArray(v)) {\n        return v;\n      }\n      var litems = v.map(function (g) {\n        return g.items;\n      });\n      return new group_types_1.ListGroup(array_1.flatten(litems));\n    });\n  };\n  ListNester.prototype.convertListBlocksToListGroups = function (items) {\n    var grouped = array_1.groupConsecutiveElementsWhile(items, function (g, gPrev) {\n      return g instanceof group_types_1.BlockGroup && gPrev instanceof group_types_1.BlockGroup && g.op.isList() && gPrev.op.isList() && g.op.isSameListAs(gPrev.op) && g.op.hasSameIndentationAs(gPrev.op);\n    });\n    return grouped.map(function (item) {\n      if (!Array.isArray(item)) {\n        if (item instanceof group_types_1.BlockGroup && item.op.isList()) {\n          return new group_types_1.ListGroup([new group_types_1.ListItem(item)]);\n        }\n        return item;\n      }\n      return new group_types_1.ListGroup(item.map(function (g) {\n        return new group_types_1.ListItem(g);\n      }));\n    });\n  };\n  ListNester.prototype.groupConsecutiveListGroups = function (items) {\n    return array_1.groupConsecutiveElementsWhile(items, function (curr, prev) {\n      return curr instanceof group_types_1.ListGroup && prev instanceof group_types_1.ListGroup;\n    });\n  };\n  ListNester.prototype.nestListSection = function (sectionItems) {\n    var _this = this;\n    var indentGroups = this.groupByIndent(sectionItems);\n    Object.keys(indentGroups).map(Number).sort().reverse().forEach(function (indent) {\n      indentGroups[indent].forEach(function (lg) {\n        var idx = sectionItems.indexOf(lg);\n        if (_this.placeUnderParent(lg, sectionItems.slice(0, idx))) {\n          sectionItems.splice(idx, 1);\n        }\n      });\n    });\n    return sectionItems;\n  };\n  ListNester.prototype.groupByIndent = function (items) {\n    return items.reduce(function (pv, cv) {\n      var indent = cv.items[0].item.op.attributes.indent;\n      if (indent) {\n        pv[indent] = pv[indent] || [];\n        pv[indent].push(cv);\n      }\n      return pv;\n    }, {});\n  };\n  ListNester.prototype.placeUnderParent = function (target, items) {\n    for (var i = items.length - 1; i >= 0; i--) {\n      var elm = items[i];\n      if (target.items[0].item.op.hasHigherIndentThan(elm.items[0].item.op)) {\n        var parent = elm.items[elm.items.length - 1];\n        if (parent.innerList) {\n          parent.innerList.items = parent.innerList.items.concat(target.items);\n        } else {\n          parent.innerList = target;\n        }\n        return true;\n      }\n    }\n    return false;\n  };\n  return ListNester;\n}();\nexports.ListNester = ListNester;","map":{"version":3,"names":["Object","defineProperty","exports","value","group_types_1","require","array_1","ListNester","prototype","nest","groups","_this","listBlocked","convertListBlocksToListGroups","groupedByListGroups","groupConsecutiveListGroups","nested","flatten","map","group","Array","isArray","nestListSection","groupRootLists","groupConsecutiveElementsWhile","curr","prev","ListGroup","items","item","op","isSameListAs","v","litems","g","grouped","gPrev","BlockGroup","isList","hasSameIndentationAs","ListItem","sectionItems","indentGroups","groupByIndent","keys","Number","sort","reverse","forEach","indent","lg","idx","indexOf","placeUnderParent","slice","splice","reduce","pv","cv","attributes","push","target","i","length","elm","hasHigherIndentThan","parent","innerList","concat"],"sources":["C:/laragon/www/doctor-manager/node_modules/quill-delta-to-html/dist/commonjs/grouper/ListNester.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_types_1 = require(\"./group-types\");\nvar array_1 = require(\"./../helpers/array\");\nvar ListNester = (function () {\n    function ListNester() {\n    }\n    ListNester.prototype.nest = function (groups) {\n        var _this = this;\n        var listBlocked = this.convertListBlocksToListGroups(groups);\n        var groupedByListGroups = this.groupConsecutiveListGroups(listBlocked);\n        var nested = array_1.flatten(groupedByListGroups.map(function (group) {\n            if (!Array.isArray(group)) {\n                return group;\n            }\n            return _this.nestListSection(group);\n        }));\n        var groupRootLists = array_1.groupConsecutiveElementsWhile(nested, function (curr, prev) {\n            if (!(curr instanceof group_types_1.ListGroup && prev instanceof group_types_1.ListGroup)) {\n                return false;\n            }\n            return curr.items[0].item.op.isSameListAs(prev.items[0].item.op);\n        });\n        return groupRootLists.map(function (v) {\n            if (!Array.isArray(v)) {\n                return v;\n            }\n            var litems = v.map(function (g) { return g.items; });\n            return new group_types_1.ListGroup(array_1.flatten(litems));\n        });\n    };\n    ListNester.prototype.convertListBlocksToListGroups = function (items) {\n        var grouped = array_1.groupConsecutiveElementsWhile(items, function (g, gPrev) {\n            return (g instanceof group_types_1.BlockGroup &&\n                gPrev instanceof group_types_1.BlockGroup &&\n                g.op.isList() &&\n                gPrev.op.isList() &&\n                g.op.isSameListAs(gPrev.op) &&\n                g.op.hasSameIndentationAs(gPrev.op));\n        });\n        return grouped.map(function (item) {\n            if (!Array.isArray(item)) {\n                if (item instanceof group_types_1.BlockGroup && item.op.isList()) {\n                    return new group_types_1.ListGroup([new group_types_1.ListItem(item)]);\n                }\n                return item;\n            }\n            return new group_types_1.ListGroup(item.map(function (g) { return new group_types_1.ListItem(g); }));\n        });\n    };\n    ListNester.prototype.groupConsecutiveListGroups = function (items) {\n        return array_1.groupConsecutiveElementsWhile(items, function (curr, prev) {\n            return curr instanceof group_types_1.ListGroup && prev instanceof group_types_1.ListGroup;\n        });\n    };\n    ListNester.prototype.nestListSection = function (sectionItems) {\n        var _this = this;\n        var indentGroups = this.groupByIndent(sectionItems);\n        Object.keys(indentGroups)\n            .map(Number)\n            .sort()\n            .reverse()\n            .forEach(function (indent) {\n            indentGroups[indent].forEach(function (lg) {\n                var idx = sectionItems.indexOf(lg);\n                if (_this.placeUnderParent(lg, sectionItems.slice(0, idx))) {\n                    sectionItems.splice(idx, 1);\n                }\n            });\n        });\n        return sectionItems;\n    };\n    ListNester.prototype.groupByIndent = function (items) {\n        return items.reduce(function (pv, cv) {\n            var indent = cv.items[0].item.op.attributes.indent;\n            if (indent) {\n                pv[indent] = pv[indent] || [];\n                pv[indent].push(cv);\n            }\n            return pv;\n        }, {});\n    };\n    ListNester.prototype.placeUnderParent = function (target, items) {\n        for (var i = items.length - 1; i >= 0; i--) {\n            var elm = items[i];\n            if (target.items[0].item.op.hasHigherIndentThan(elm.items[0].item.op)) {\n                var parent = elm.items[elm.items.length - 1];\n                if (parent.innerList) {\n                    parent.innerList.items = parent.innerList.items.concat(target.items);\n                }\n                else {\n                    parent.innerList = target;\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    return ListNester;\n}());\nexports.ListNester = ListNester;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}