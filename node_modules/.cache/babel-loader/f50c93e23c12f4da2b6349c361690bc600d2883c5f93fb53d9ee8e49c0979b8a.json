{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\doctor-manager\\\\sales\\\\src\\\\components\\\\misc\\\\SendEmail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EmailEditor from './EmailEditor';\nimport EmailSender from './EmailSender';\n\n// Import the EmailGroupSelector, EmailEditor, and EmailSender components here.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailComposePage() {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(\"Group A\");\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const sendEmail = () => {\n    // Here, you can implement the logic to send the email to all addresses in the selected group.\n    // You might need to use an API or a service for sending emails.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Compose Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailGroupSelector, {\n      selectedGroup: selectedGroup,\n      onSelectGroup: setSelectedGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailEditor, {\n      subject: subject,\n      content: content,\n      onSubjectChange: setSubject,\n      onContentChange: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailSender, {\n      onSendEmail: sendEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailComposePage, \"CJGpDHE4XCKr4dKkPwK/zgkPnWM=\");\n_c = EmailComposePage;\nexport default EmailComposePage;\nvar _c;\n$RefreshReg$(_c, \"EmailComposePage\");","map":{"version":3,"names":["React","useState","EmailEditor","EmailSender","jsxDEV","_jsxDEV","EmailComposePage","_s","selectedGroup","setSelectedGroup","subject","setSubject","content","setContent","sendEmail","children","fileName","_jsxFileName","lineNumber","columnNumber","EmailGroupSelector","onSelectGroup","onSubjectChange","onContentChange","onSendEmail","_c","$RefreshReg$"],"sources":["C:/laragon/www/doctor-manager/sales/src/components/misc/SendEmail.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport EmailEditor from './EmailEditor';\r\nimport EmailSender from './EmailSender'\r\n\r\n// Import the EmailGroupSelector, EmailEditor, and EmailSender components here.\r\n\r\nfunction EmailComposePage() {\r\n  const [selectedGroup, setSelectedGroup] = useState(\"Group A\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const sendEmail = () => {\r\n    // Here, you can implement the logic to send the email to all addresses in the selected group.\r\n    // You might need to use an API or a service for sending emails.\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Compose Email</h1>\r\n      <EmailGroupSelector selectedGroup={selectedGroup} onSelectGroup={setSelectedGroup} />\r\n      <EmailEditor subject={subject} content={content} onSubjectChange={setSubject} onContentChange={setContent} />\r\n      <EmailSender onSendEmail={sendEmail} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailComposePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC;EAC7D,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA;EAAA,CACD;EAED,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBd,OAAA,CAACe,kBAAkB;MAACZ,aAAa,EAAEA,aAAc;MAACa,aAAa,EAAEZ;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrFd,OAAA,CAACH,WAAW;MAACQ,OAAO,EAAEA,OAAQ;MAACE,OAAO,EAAEA,OAAQ;MAACU,eAAe,EAAEX,UAAW;MAACY,eAAe,EAAEV;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7Gd,OAAA,CAACF,WAAW;MAACqB,WAAW,EAAEV;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV;AAACZ,EAAA,CAlBQD,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAoBzB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}