{"ast":null,"code":"import _slicedToArray from\"C:/laragon/www/doctor-manager/sales/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useState,useEffect}from\"react\";import{createGroup,getGroupById,updateGroupData}from'../../api/api';// Import the API functions\nimport{toast}from\"react-toastify\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Modal=function Modal(_ref){var isAdded=_ref.isAdded,setIsAdded=_ref.setIsAdded,isModalOpen=_ref.isModalOpen,setIsModalOpen=_ref.setIsModalOpen,updateGroup=_ref.updateGroup,setUpdateGroup=_ref.setUpdateGroup;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),groupName=_useState2[0],setGroupName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),groupDetails=_useState6[0],setGroupDetails=_useState6[1];useEffect(function(){if(isModalOpen){if(updateGroup){// Fetch group details by its ID\ngetGroupById(updateGroup).then(function(response){setGroupName(response.data.groupDetails.groupName);setDescription(response.data.groupDetails.description);// console.log(response.data.groupDetails)\n}).catch(function(error){console.error('Error fetching group details:',error);});setUpdateGroup('');}}},[updateGroup]);var handleAddGroup=function handleAddGroup(){if(!groupName||!description){toast.error('Group Name and Description cannot be empty');return;}var data={\"groupName\":groupName,\"description\":description};createGroup(data).then(function(response){toast.success('Group Created Successfully');setGroupName('');closeModal();}).catch(function(error){toast.error('Unable to create the group');console.error('Error creating group:',error);});};var handleUpdateGroup=function handleUpdateGroup(){if(!groupName||!description){toast.error('Group Name and Description cannot be empty');return;}var data={groupName:groupName,description:description};// Assuming you have an updateGroup function in your API\nupdateGroupData(updateGroup,data)// Replace `groupId` with the actual group ID\n.then(function(response){toast.success('Group Updated Successfully');setGroupName('');setDescription('');setUpdateGroup('');closeModal();}).catch(function(error){toast.error('Unable to update the group');console.error('Error updating group:',error);});};var closeModal=function closeModal(){setIsModalOpen(false);setGroupName('');setDescription('');setUpdateGroup('');};return/*#__PURE__*/_jsx(_Fragment,{children:isModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 flex items-center justify-center z-10\",children:/*#__PURE__*/_jsx(\"div\",{className:\"modal bg-white p-6 rounded w-5/12 shadow-2xl\",style:{margin:'0 auto'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-medium mb-5 text-lg\",children:\"Enter Group Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"group-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block mb-2\",children:\"Group Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:groupName,className:\"w-full border rounded p-2\",onChange:function onChange(e){setGroupName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",className:\"block mb-2\",children:\"Description:\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"appearance-none w-full border rounded p-2 h-40\",id:\"description\",value:description,onChange:function onChange(e){return setDescription(e.target.value);}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[updateGroup?/*#__PURE__*/_jsx(\"button\",{onClick:handleUpdateGroup,className:\"bg-blue-500 text-white px-4 py-2 rounded\",children:\"Update Group\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleAddGroup,className:\"bg-blue-500 text-white px-4 py-2 rounded\",children:\"Save Group\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeModal,className:\"ml-2 bg-gray-300 px-4 py-2 rounded\",children:\"Cancel\"})]})]})})})});};export default Modal;","map":{"version":3,"names":["React","useRef","useState","useEffect","createGroup","getGroupById","updateGroupData","toast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Modal","_ref","isAdded","setIsAdded","isModalOpen","setIsModalOpen","updateGroup","setUpdateGroup","_useState","_useState2","_slicedToArray","groupName","setGroupName","_useState3","_useState4","description","setDescription","_useState5","_useState6","groupDetails","setGroupDetails","then","response","data","catch","error","console","handleAddGroup","success","closeModal","handleUpdateGroup","children","className","style","margin","type","value","onChange","e","target","htmlFor","id","onClick"],"sources":["C:/laragon/www/doctor-manager/sales/src/components/misc/Modal.jsx"],"sourcesContent":["    import React, { useRef, useState, useEffect } from \"react\";\r\n    \r\nimport { createGroup, getGroupById, updateGroupData } from '../../api/api';  // Import the API functions\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\n    const Modal = ({ isAdded, setIsAdded, isModalOpen, setIsModalOpen, updateGroup, setUpdateGroup}) => {\r\n\r\n        const [groupName, setGroupName] = useState('');\r\n        const [description, setDescription] = useState('')\r\n        const [groupDetails, setGroupDetails] = useState(null);\r\n\r\n        useEffect(() => {\r\n            if(isModalOpen){\r\n              if (updateGroup) {\r\n              // Fetch group details by its ID\r\n              getGroupById(updateGroup)\r\n                .then((response) => {\r\n                    setGroupName(response.data.groupDetails.groupName)\r\n                    setDescription(response.data.groupDetails.description)\r\n                  // console.log(response.data.groupDetails)\r\n                })\r\n                .catch((error) => {\r\n                  console.error('Error fetching group details:', error);\r\n                });\r\n                setUpdateGroup('')\r\n            }}\r\n          }, [updateGroup]);\r\n\r\n      const handleAddGroup = () => {\r\n        if (!groupName || !description) {\r\n          toast.error('Group Name and Description cannot be empty');\r\n          return;\r\n        }\r\n        const data = {\r\n          \"groupName\": groupName,\r\n          \"description\": description\r\n        }\r\n        createGroup(data)\r\n          .then((response) => {\r\n            toast.success('Group Created Successfully');\r\n            setGroupName('');\r\n            closeModal();\r\n          })\r\n          .catch((error) => {\r\n            toast.error('Unable to create the group');\r\n            console.error('Error creating group:', error);\r\n          });\r\n      };\r\n\r\n\r\n      const handleUpdateGroup = () => {\r\n        if (!groupName || !description) {\r\n          toast.error('Group Name and Description cannot be empty');\r\n          return;\r\n        }\r\n      \r\n        const data = {\r\n          groupName,\r\n          description,\r\n        };\r\n      \r\n        // Assuming you have an updateGroup function in your API\r\n        updateGroupData(updateGroup, data) // Replace `groupId` with the actual group ID\r\n          .then((response) => {\r\n            toast.success('Group Updated Successfully');\r\n            setGroupName('');\r\n            setDescription('');\r\n            setUpdateGroup('')\r\n            closeModal();\r\n          })\r\n          .catch((error) => {\r\n            toast.error('Unable to update the group');\r\n            console.error('Error updating group:', error);\r\n          });\r\n      };\r\n      \r\n\r\n      const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setGroupName('')\r\n        setDescription('')\r\n        setUpdateGroup('')\r\n      };\r\n  \r\n\r\n    return (\r\n        <>\r\n        {isModalOpen && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center z-10\">\r\n          <div className=\"modal bg-white p-6 rounded w-5/12 shadow-2xl\" style={{ margin: '0 auto' }}>\r\n            \r\n            <div className=\"modal-content\">\r\n              <h2 className=\"font-medium mb-5 text-lg\">Enter Group Details</h2>\r\n              <div className=\"group-details\">\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-2\">Group Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={groupName}\r\n                  className=\"w-full border rounded p-2\"\r\n                  onChange={(e) => {\r\n                    setGroupName(e.target.value);\r\n                  }}\r\n                />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n        <label htmlFor=\"description\" className=\"block mb-2\">\r\n          Description: \r\n        </label>\r\n        <textarea\r\n          className=\"appearance-none w-full border rounded p-2 h-40\"\r\n          id=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n              </div>\r\n              <div className=\"modal-actions\">\r\n                {updateGroup? <button onClick={handleUpdateGroup} className=\"bg-blue-500 text-white px-4 py-2 rounded\">Update Group</button> : <button onClick={handleAddGroup} className=\"bg-blue-500 text-white px-4 py-2 rounded\">Save Group</button>}\r\n                {/* <button onClick={handleAddGroup}>Save Group</button> */}\r\n                <button onClick={closeModal} className=\"ml-2 bg-gray-300 px-4 py-2 rounded\">Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n        </>\r\n    );\r\n    };\r\n\r\n    export default Modal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}